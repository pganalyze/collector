// Code generated by protoc-gen-go. DO NOT EDIT.
// source: full_snapshot.proto

package pganalyze_collector

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ! When changing this, also update mappings/backend_state.json
type BackendCountStatistic_BackendState int32

const (
	BackendCountStatistic_UNKNOWN_STATE               BackendCountStatistic_BackendState = 0
	BackendCountStatistic_ACTIVE                      BackendCountStatistic_BackendState = 1
	BackendCountStatistic_IDLE                        BackendCountStatistic_BackendState = 2
	BackendCountStatistic_IDLE_IN_TRANSACTION         BackendCountStatistic_BackendState = 3
	BackendCountStatistic_IDLE_IN_TRANSACTION_ABORTED BackendCountStatistic_BackendState = 4
	BackendCountStatistic_FASTPATH_FUNCTION_CALL      BackendCountStatistic_BackendState = 5
	BackendCountStatistic_DISABLED                    BackendCountStatistic_BackendState = 6
)

var BackendCountStatistic_BackendState_name = map[int32]string{
	0: "UNKNOWN_STATE",
	1: "ACTIVE",
	2: "IDLE",
	3: "IDLE_IN_TRANSACTION",
	4: "IDLE_IN_TRANSACTION_ABORTED",
	5: "FASTPATH_FUNCTION_CALL",
	6: "DISABLED",
}

var BackendCountStatistic_BackendState_value = map[string]int32{
	"UNKNOWN_STATE":               0,
	"ACTIVE":                      1,
	"IDLE":                        2,
	"IDLE_IN_TRANSACTION":         3,
	"IDLE_IN_TRANSACTION_ABORTED": 4,
	"FASTPATH_FUNCTION_CALL":      5,
	"DISABLED":                    6,
}

func (x BackendCountStatistic_BackendState) String() string {
	return proto.EnumName(BackendCountStatistic_BackendState_name, int32(x))
}

func (BackendCountStatistic_BackendState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{9, 0}
}

// ! When changing this, also update mappings/backend_type.json
type BackendCountStatistic_BackendType int32

const (
	BackendCountStatistic_UNKNOWN_TYPE        BackendCountStatistic_BackendType = 0
	BackendCountStatistic_AUTOVACUUM_LAUNCHER BackendCountStatistic_BackendType = 1
	BackendCountStatistic_AUTOVACUUM_WORKER   BackendCountStatistic_BackendType = 2
	BackendCountStatistic_BACKGROUND_WORKER   BackendCountStatistic_BackendType = 3
	BackendCountStatistic_BACKGROUND_WRITER   BackendCountStatistic_BackendType = 4
	BackendCountStatistic_CLIENT_BACKEND      BackendCountStatistic_BackendType = 5
	BackendCountStatistic_CHECKPOINTER        BackendCountStatistic_BackendType = 6
	BackendCountStatistic_STARTUP             BackendCountStatistic_BackendType = 7
	BackendCountStatistic_WALRECEIVER         BackendCountStatistic_BackendType = 8
	BackendCountStatistic_WALSENDER           BackendCountStatistic_BackendType = 9
	BackendCountStatistic_WALWRITER           BackendCountStatistic_BackendType = 10
)

var BackendCountStatistic_BackendType_name = map[int32]string{
	0:  "UNKNOWN_TYPE",
	1:  "AUTOVACUUM_LAUNCHER",
	2:  "AUTOVACUUM_WORKER",
	3:  "BACKGROUND_WORKER",
	4:  "BACKGROUND_WRITER",
	5:  "CLIENT_BACKEND",
	6:  "CHECKPOINTER",
	7:  "STARTUP",
	8:  "WALRECEIVER",
	9:  "WALSENDER",
	10: "WALWRITER",
}

var BackendCountStatistic_BackendType_value = map[string]int32{
	"UNKNOWN_TYPE":        0,
	"AUTOVACUUM_LAUNCHER": 1,
	"AUTOVACUUM_WORKER":   2,
	"BACKGROUND_WORKER":   3,
	"BACKGROUND_WRITER":   4,
	"CLIENT_BACKEND":      5,
	"CHECKPOINTER":        6,
	"STARTUP":             7,
	"WALRECEIVER":         8,
	"WALSENDER":           9,
	"WALWRITER":           10,
}

func (x BackendCountStatistic_BackendType) String() string {
	return proto.EnumName(BackendCountStatistic_BackendType_name, int32(x))
}

func (BackendCountStatistic_BackendType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{9, 1}
}

type RelationEvent_EventType int32

const (
	RelationEvent_MANUAL_VACUUM  RelationEvent_EventType = 0
	RelationEvent_AUTO_VACUUM    RelationEvent_EventType = 1
	RelationEvent_MANUAL_ANALYZE RelationEvent_EventType = 2
	RelationEvent_AUTO_ANALYZE   RelationEvent_EventType = 3
)

var RelationEvent_EventType_name = map[int32]string{
	0: "MANUAL_VACUUM",
	1: "AUTO_VACUUM",
	2: "MANUAL_ANALYZE",
	3: "AUTO_ANALYZE",
}

var RelationEvent_EventType_value = map[string]int32{
	"MANUAL_VACUUM":  0,
	"AUTO_VACUUM":    1,
	"MANUAL_ANALYZE": 2,
	"AUTO_ANALYZE":   3,
}

func (x RelationEvent_EventType) String() string {
	return proto.EnumName(RelationEvent_EventType_name, int32(x))
}

func (RelationEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{16, 0}
}

type FullSnapshot struct {
	// Basic information about this snapshot
	SnapshotVersionMajor  int32                `protobuf:"varint,1,opt,name=snapshot_version_major,json=snapshotVersionMajor,proto3" json:"snapshot_version_major,omitempty"`
	SnapshotVersionMinor  int32                `protobuf:"varint,2,opt,name=snapshot_version_minor,json=snapshotVersionMinor,proto3" json:"snapshot_version_minor,omitempty"`
	CollectorVersion      string               `protobuf:"bytes,3,opt,name=collector_version,json=collectorVersion,proto3" json:"collector_version,omitempty"`
	FailedRun             bool                 `protobuf:"varint,4,opt,name=failed_run,json=failedRun,proto3" json:"failed_run,omitempty"`
	SnapshotUuid          string               `protobuf:"bytes,10,opt,name=snapshot_uuid,json=snapshotUuid,proto3" json:"snapshot_uuid,omitempty"`
	CollectedAt           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=collected_at,json=collectedAt,proto3" json:"collected_at,omitempty"`
	CollectedIntervalSecs uint32               `protobuf:"varint,12,opt,name=collected_interval_secs,json=collectedIntervalSecs,proto3" json:"collected_interval_secs,omitempty"`
	CollectorStatistic    *CollectorStatistic  `protobuf:"bytes,20,opt,name=collector_statistic,json=collectorStatistic,proto3" json:"collector_statistic,omitempty"`
	CollectorErrors       []string             `protobuf:"bytes,21,rep,name=collector_errors,json=collectorErrors,proto3" json:"collector_errors,omitempty"`
	// Per server (and hence snapshot)
	System                 *System                  `protobuf:"bytes,100,opt,name=system,proto3" json:"system,omitempty"`
	PostgresVersion        *PostgresVersion         `protobuf:"bytes,101,opt,name=postgres_version,json=postgresVersion,proto3" json:"postgres_version,omitempty"`
	RoleReferences         []*RoleReference         `protobuf:"bytes,102,rep,name=role_references,json=roleReferences,proto3" json:"role_references,omitempty"`
	DatabaseReferences     []*DatabaseReference     `protobuf:"bytes,103,rep,name=database_references,json=databaseReferences,proto3" json:"database_references,omitempty"`
	RoleInformations       []*RoleInformation       `protobuf:"bytes,110,rep,name=role_informations,json=roleInformations,proto3" json:"role_informations,omitempty"`
	DatabaseInformations   []*DatabaseInformation   `protobuf:"bytes,111,rep,name=database_informations,json=databaseInformations,proto3" json:"database_informations,omitempty"`
	Settings               []*Setting               `protobuf:"bytes,122,rep,name=settings,proto3" json:"settings,omitempty"`
	Replication            *Replication             `protobuf:"bytes,123,opt,name=replication,proto3" json:"replication,omitempty"`
	BackendCountStatistics []*BackendCountStatistic `protobuf:"bytes,124,rep,name=backend_count_statistics,json=backendCountStatistics,proto3" json:"backend_count_statistics,omitempty"`
	TablespaceReferences   []*TablespaceReference   `protobuf:"bytes,130,rep,name=tablespace_references,json=tablespaceReferences,proto3" json:"tablespace_references,omitempty"`
	TablespaceInformations []*TablespaceInformation `protobuf:"bytes,131,rep,name=tablespace_informations,json=tablespaceInformations,proto3" json:"tablespace_informations,omitempty"`
	// Per database
	QueryReferences         []*QueryReference          `protobuf:"bytes,200,rep,name=query_references,json=queryReferences,proto3" json:"query_references,omitempty"`
	RelationReferences      []*RelationReference       `protobuf:"bytes,201,rep,name=relation_references,json=relationReferences,proto3" json:"relation_references,omitempty"`
	IndexReferences         []*IndexReference          `protobuf:"bytes,202,rep,name=index_references,json=indexReferences,proto3" json:"index_references,omitempty"`
	FunctionReferences      []*FunctionReference       `protobuf:"bytes,203,rep,name=function_references,json=functionReferences,proto3" json:"function_references,omitempty"`
	QueryInformations       []*QueryInformation        `protobuf:"bytes,210,rep,name=query_informations,json=queryInformations,proto3" json:"query_informations,omitempty"`
	QueryStatistics         []*QueryStatistic          `protobuf:"bytes,211,rep,name=query_statistics,json=queryStatistics,proto3" json:"query_statistics,omitempty"`
	HistoricQueryStatistics []*HistoricQueryStatistics `protobuf:"bytes,213,rep,name=historic_query_statistics,json=historicQueryStatistics,proto3" json:"historic_query_statistics,omitempty"`
	QueryExplains           []*QueryExplainInformation `protobuf:"bytes,214,rep,name=query_explains,json=queryExplains,proto3" json:"query_explains,omitempty"`
	RelationInformations    []*RelationInformation     `protobuf:"bytes,220,rep,name=relation_informations,json=relationInformations,proto3" json:"relation_informations,omitempty"`
	RelationStatistics      []*RelationStatistic       `protobuf:"bytes,221,rep,name=relation_statistics,json=relationStatistics,proto3" json:"relation_statistics,omitempty"`
	RelationEvents          []*RelationEvent           `protobuf:"bytes,223,rep,name=relation_events,json=relationEvents,proto3" json:"relation_events,omitempty"`
	IndexInformations       []*IndexInformation        `protobuf:"bytes,224,rep,name=index_informations,json=indexInformations,proto3" json:"index_informations,omitempty"`
	IndexStatistics         []*IndexStatistic          `protobuf:"bytes,225,rep,name=index_statistics,json=indexStatistics,proto3" json:"index_statistics,omitempty"`
	FunctionInformations    []*FunctionInformation     `protobuf:"bytes,227,rep,name=function_informations,json=functionInformations,proto3" json:"function_informations,omitempty"`
	FunctionStatistics      []*FunctionStatistic       `protobuf:"bytes,228,rep,name=function_statistics,json=functionStatistics,proto3" json:"function_statistics,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                   `json:"-"`
	XXX_unrecognized        []byte                     `json:"-"`
	XXX_sizecache           int32                      `json:"-"`
}

func (m *FullSnapshot) Reset()         { *m = FullSnapshot{} }
func (m *FullSnapshot) String() string { return proto.CompactTextString(m) }
func (*FullSnapshot) ProtoMessage()    {}
func (*FullSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{0}
}

func (m *FullSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullSnapshot.Unmarshal(m, b)
}
func (m *FullSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullSnapshot.Marshal(b, m, deterministic)
}
func (m *FullSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullSnapshot.Merge(m, src)
}
func (m *FullSnapshot) XXX_Size() int {
	return xxx_messageInfo_FullSnapshot.Size(m)
}
func (m *FullSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_FullSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_FullSnapshot proto.InternalMessageInfo

func (m *FullSnapshot) GetSnapshotVersionMajor() int32 {
	if m != nil {
		return m.SnapshotVersionMajor
	}
	return 0
}

func (m *FullSnapshot) GetSnapshotVersionMinor() int32 {
	if m != nil {
		return m.SnapshotVersionMinor
	}
	return 0
}

func (m *FullSnapshot) GetCollectorVersion() string {
	if m != nil {
		return m.CollectorVersion
	}
	return ""
}

func (m *FullSnapshot) GetFailedRun() bool {
	if m != nil {
		return m.FailedRun
	}
	return false
}

func (m *FullSnapshot) GetSnapshotUuid() string {
	if m != nil {
		return m.SnapshotUuid
	}
	return ""
}

func (m *FullSnapshot) GetCollectedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CollectedAt
	}
	return nil
}

func (m *FullSnapshot) GetCollectedIntervalSecs() uint32 {
	if m != nil {
		return m.CollectedIntervalSecs
	}
	return 0
}

func (m *FullSnapshot) GetCollectorStatistic() *CollectorStatistic {
	if m != nil {
		return m.CollectorStatistic
	}
	return nil
}

func (m *FullSnapshot) GetCollectorErrors() []string {
	if m != nil {
		return m.CollectorErrors
	}
	return nil
}

func (m *FullSnapshot) GetSystem() *System {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *FullSnapshot) GetPostgresVersion() *PostgresVersion {
	if m != nil {
		return m.PostgresVersion
	}
	return nil
}

func (m *FullSnapshot) GetRoleReferences() []*RoleReference {
	if m != nil {
		return m.RoleReferences
	}
	return nil
}

func (m *FullSnapshot) GetDatabaseReferences() []*DatabaseReference {
	if m != nil {
		return m.DatabaseReferences
	}
	return nil
}

func (m *FullSnapshot) GetRoleInformations() []*RoleInformation {
	if m != nil {
		return m.RoleInformations
	}
	return nil
}

func (m *FullSnapshot) GetDatabaseInformations() []*DatabaseInformation {
	if m != nil {
		return m.DatabaseInformations
	}
	return nil
}

func (m *FullSnapshot) GetSettings() []*Setting {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (m *FullSnapshot) GetReplication() *Replication {
	if m != nil {
		return m.Replication
	}
	return nil
}

func (m *FullSnapshot) GetBackendCountStatistics() []*BackendCountStatistic {
	if m != nil {
		return m.BackendCountStatistics
	}
	return nil
}

func (m *FullSnapshot) GetTablespaceReferences() []*TablespaceReference {
	if m != nil {
		return m.TablespaceReferences
	}
	return nil
}

func (m *FullSnapshot) GetTablespaceInformations() []*TablespaceInformation {
	if m != nil {
		return m.TablespaceInformations
	}
	return nil
}

func (m *FullSnapshot) GetQueryReferences() []*QueryReference {
	if m != nil {
		return m.QueryReferences
	}
	return nil
}

func (m *FullSnapshot) GetRelationReferences() []*RelationReference {
	if m != nil {
		return m.RelationReferences
	}
	return nil
}

func (m *FullSnapshot) GetIndexReferences() []*IndexReference {
	if m != nil {
		return m.IndexReferences
	}
	return nil
}

func (m *FullSnapshot) GetFunctionReferences() []*FunctionReference {
	if m != nil {
		return m.FunctionReferences
	}
	return nil
}

func (m *FullSnapshot) GetQueryInformations() []*QueryInformation {
	if m != nil {
		return m.QueryInformations
	}
	return nil
}

func (m *FullSnapshot) GetQueryStatistics() []*QueryStatistic {
	if m != nil {
		return m.QueryStatistics
	}
	return nil
}

func (m *FullSnapshot) GetHistoricQueryStatistics() []*HistoricQueryStatistics {
	if m != nil {
		return m.HistoricQueryStatistics
	}
	return nil
}

func (m *FullSnapshot) GetQueryExplains() []*QueryExplainInformation {
	if m != nil {
		return m.QueryExplains
	}
	return nil
}

func (m *FullSnapshot) GetRelationInformations() []*RelationInformation {
	if m != nil {
		return m.RelationInformations
	}
	return nil
}

func (m *FullSnapshot) GetRelationStatistics() []*RelationStatistic {
	if m != nil {
		return m.RelationStatistics
	}
	return nil
}

func (m *FullSnapshot) GetRelationEvents() []*RelationEvent {
	if m != nil {
		return m.RelationEvents
	}
	return nil
}

func (m *FullSnapshot) GetIndexInformations() []*IndexInformation {
	if m != nil {
		return m.IndexInformations
	}
	return nil
}

func (m *FullSnapshot) GetIndexStatistics() []*IndexStatistic {
	if m != nil {
		return m.IndexStatistics
	}
	return nil
}

func (m *FullSnapshot) GetFunctionInformations() []*FunctionInformation {
	if m != nil {
		return m.FunctionInformations
	}
	return nil
}

func (m *FullSnapshot) GetFunctionStatistics() []*FunctionStatistic {
	if m != nil {
		return m.FunctionStatistics
	}
	return nil
}

type CollectorStatistic struct {
	GoVersion string `protobuf:"bytes,10,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	// Statistics from after the collection input step
	MemoryHeapAllocatedBytes uint64 `protobuf:"varint,13,opt,name=memory_heap_allocated_bytes,json=memoryHeapAllocatedBytes,proto3" json:"memory_heap_allocated_bytes,omitempty"`
	MemoryHeapObjects        uint64 `protobuf:"varint,14,opt,name=memory_heap_objects,json=memoryHeapObjects,proto3" json:"memory_heap_objects,omitempty"`
	MemorySystemBytes        uint64 `protobuf:"varint,15,opt,name=memory_system_bytes,json=memorySystemBytes,proto3" json:"memory_system_bytes,omitempty"`
	MemoryRssBytes           uint64 `protobuf:"varint,16,opt,name=memory_rss_bytes,json=memoryRssBytes,proto3" json:"memory_rss_bytes,omitempty"`
	ActiveGoroutines         int32  `protobuf:"varint,20,opt,name=active_goroutines,json=activeGoroutines,proto3" json:"active_goroutines,omitempty"`
	// Diff-ed statistics between two runs
	CgoCalls             int64    `protobuf:"varint,30,opt,name=cgo_calls,json=cgoCalls,proto3" json:"cgo_calls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectorStatistic) Reset()         { *m = CollectorStatistic{} }
func (m *CollectorStatistic) String() string { return proto.CompactTextString(m) }
func (*CollectorStatistic) ProtoMessage()    {}
func (*CollectorStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{1}
}

func (m *CollectorStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectorStatistic.Unmarshal(m, b)
}
func (m *CollectorStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectorStatistic.Marshal(b, m, deterministic)
}
func (m *CollectorStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectorStatistic.Merge(m, src)
}
func (m *CollectorStatistic) XXX_Size() int {
	return xxx_messageInfo_CollectorStatistic.Size(m)
}
func (m *CollectorStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectorStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_CollectorStatistic proto.InternalMessageInfo

func (m *CollectorStatistic) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *CollectorStatistic) GetMemoryHeapAllocatedBytes() uint64 {
	if m != nil {
		return m.MemoryHeapAllocatedBytes
	}
	return 0
}

func (m *CollectorStatistic) GetMemoryHeapObjects() uint64 {
	if m != nil {
		return m.MemoryHeapObjects
	}
	return 0
}

func (m *CollectorStatistic) GetMemorySystemBytes() uint64 {
	if m != nil {
		return m.MemorySystemBytes
	}
	return 0
}

func (m *CollectorStatistic) GetMemoryRssBytes() uint64 {
	if m != nil {
		return m.MemoryRssBytes
	}
	return 0
}

func (m *CollectorStatistic) GetActiveGoroutines() int32 {
	if m != nil {
		return m.ActiveGoroutines
	}
	return 0
}

func (m *CollectorStatistic) GetCgoCalls() int64 {
	if m != nil {
		return m.CgoCalls
	}
	return 0
}

type RoleInformation struct {
	RoleIdx              int32          `protobuf:"varint,1,opt,name=role_idx,json=roleIdx,proto3" json:"role_idx,omitempty"`
	Inherit              bool           `protobuf:"varint,2,opt,name=inherit,proto3" json:"inherit,omitempty"`
	Login                bool           `protobuf:"varint,3,opt,name=login,proto3" json:"login,omitempty"`
	CreateDb             bool           `protobuf:"varint,4,opt,name=create_db,json=createDb,proto3" json:"create_db,omitempty"`
	CreateRole           bool           `protobuf:"varint,5,opt,name=create_role,json=createRole,proto3" json:"create_role,omitempty"`
	SuperUser            bool           `protobuf:"varint,6,opt,name=super_user,json=superUser,proto3" json:"super_user,omitempty"`
	Replication          bool           `protobuf:"varint,7,opt,name=replication,proto3" json:"replication,omitempty"`
	BypassRls            bool           `protobuf:"varint,8,opt,name=bypass_rls,json=bypassRls,proto3" json:"bypass_rls,omitempty"`
	ConnectionLimit      int32          `protobuf:"varint,9,opt,name=connection_limit,json=connectionLimit,proto3" json:"connection_limit,omitempty"`
	PasswordValidUntil   *NullTimestamp `protobuf:"bytes,10,opt,name=password_valid_until,json=passwordValidUntil,proto3" json:"password_valid_until,omitempty"`
	Config               []string       `protobuf:"bytes,11,rep,name=config,proto3" json:"config,omitempty"`
	MemberOf             []int32        `protobuf:"varint,12,rep,packed,name=member_of,json=memberOf,proto3" json:"member_of,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoleInformation) Reset()         { *m = RoleInformation{} }
func (m *RoleInformation) String() string { return proto.CompactTextString(m) }
func (*RoleInformation) ProtoMessage()    {}
func (*RoleInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{2}
}

func (m *RoleInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleInformation.Unmarshal(m, b)
}
func (m *RoleInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleInformation.Marshal(b, m, deterministic)
}
func (m *RoleInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleInformation.Merge(m, src)
}
func (m *RoleInformation) XXX_Size() int {
	return xxx_messageInfo_RoleInformation.Size(m)
}
func (m *RoleInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleInformation.DiscardUnknown(m)
}

var xxx_messageInfo_RoleInformation proto.InternalMessageInfo

func (m *RoleInformation) GetRoleIdx() int32 {
	if m != nil {
		return m.RoleIdx
	}
	return 0
}

func (m *RoleInformation) GetInherit() bool {
	if m != nil {
		return m.Inherit
	}
	return false
}

func (m *RoleInformation) GetLogin() bool {
	if m != nil {
		return m.Login
	}
	return false
}

func (m *RoleInformation) GetCreateDb() bool {
	if m != nil {
		return m.CreateDb
	}
	return false
}

func (m *RoleInformation) GetCreateRole() bool {
	if m != nil {
		return m.CreateRole
	}
	return false
}

func (m *RoleInformation) GetSuperUser() bool {
	if m != nil {
		return m.SuperUser
	}
	return false
}

func (m *RoleInformation) GetReplication() bool {
	if m != nil {
		return m.Replication
	}
	return false
}

func (m *RoleInformation) GetBypassRls() bool {
	if m != nil {
		return m.BypassRls
	}
	return false
}

func (m *RoleInformation) GetConnectionLimit() int32 {
	if m != nil {
		return m.ConnectionLimit
	}
	return 0
}

func (m *RoleInformation) GetPasswordValidUntil() *NullTimestamp {
	if m != nil {
		return m.PasswordValidUntil
	}
	return nil
}

func (m *RoleInformation) GetConfig() []string {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RoleInformation) GetMemberOf() []int32 {
	if m != nil {
		return m.MemberOf
	}
	return nil
}

type DatabaseInformation struct {
	DatabaseIdx      int32  `protobuf:"varint,1,opt,name=database_idx,json=databaseIdx,proto3" json:"database_idx,omitempty"`
	OwnerRoleIdx     int32  `protobuf:"varint,2,opt,name=owner_role_idx,json=ownerRoleIdx,proto3" json:"owner_role_idx,omitempty"`
	Encoding         string `protobuf:"bytes,3,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Collate          string `protobuf:"bytes,4,opt,name=collate,proto3" json:"collate,omitempty"`
	CType            string `protobuf:"bytes,5,opt,name=c_type,json=cType,proto3" json:"c_type,omitempty"`
	IsTemplate       bool   `protobuf:"varint,6,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
	AllowConnections bool   `protobuf:"varint,7,opt,name=allow_connections,json=allowConnections,proto3" json:"allow_connections,omitempty"`
	ConnectionLimit  int32  `protobuf:"varint,8,opt,name=connection_limit,json=connectionLimit,proto3" json:"connection_limit,omitempty"`
	// All transaction IDs before this one have been replaced with a permanent ("frozen") transaction ID in this database.
	// This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to
	// allow pg_clog to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values.
	FrozenXid uint32 `protobuf:"varint,9,opt,name=frozen_xid,json=frozenXid,proto3" json:"frozen_xid,omitempty"`
	// All multixact IDs before this one have been replaced with a transaction ID in this database.
	// This is used to track whether the database needs to be vacuumed in order to prevent multixact ID wraparound or to
	// allow pg_multixact to be shrunk. It is the minimum of the per-table pg_class.relminmxid values.
	MinimumMultixactXid uint32 `protobuf:"varint,10,opt,name=minimum_multixact_xid,json=minimumMultixactXid,proto3" json:"minimum_multixact_xid,omitempty"`
	// Whether the collector was able to connect to this database and fetch local catalog data (e.g. schema)
	CollectedLocalCatalogData bool     `protobuf:"varint,11,opt,name=collected_local_catalog_data,json=collectedLocalCatalogData,proto3" json:"collected_local_catalog_data,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *DatabaseInformation) Reset()         { *m = DatabaseInformation{} }
func (m *DatabaseInformation) String() string { return proto.CompactTextString(m) }
func (*DatabaseInformation) ProtoMessage()    {}
func (*DatabaseInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{3}
}

func (m *DatabaseInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseInformation.Unmarshal(m, b)
}
func (m *DatabaseInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseInformation.Marshal(b, m, deterministic)
}
func (m *DatabaseInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseInformation.Merge(m, src)
}
func (m *DatabaseInformation) XXX_Size() int {
	return xxx_messageInfo_DatabaseInformation.Size(m)
}
func (m *DatabaseInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseInformation.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseInformation proto.InternalMessageInfo

func (m *DatabaseInformation) GetDatabaseIdx() int32 {
	if m != nil {
		return m.DatabaseIdx
	}
	return 0
}

func (m *DatabaseInformation) GetOwnerRoleIdx() int32 {
	if m != nil {
		return m.OwnerRoleIdx
	}
	return 0
}

func (m *DatabaseInformation) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *DatabaseInformation) GetCollate() string {
	if m != nil {
		return m.Collate
	}
	return ""
}

func (m *DatabaseInformation) GetCType() string {
	if m != nil {
		return m.CType
	}
	return ""
}

func (m *DatabaseInformation) GetIsTemplate() bool {
	if m != nil {
		return m.IsTemplate
	}
	return false
}

func (m *DatabaseInformation) GetAllowConnections() bool {
	if m != nil {
		return m.AllowConnections
	}
	return false
}

func (m *DatabaseInformation) GetConnectionLimit() int32 {
	if m != nil {
		return m.ConnectionLimit
	}
	return 0
}

func (m *DatabaseInformation) GetFrozenXid() uint32 {
	if m != nil {
		return m.FrozenXid
	}
	return 0
}

func (m *DatabaseInformation) GetMinimumMultixactXid() uint32 {
	if m != nil {
		return m.MinimumMultixactXid
	}
	return 0
}

func (m *DatabaseInformation) GetCollectedLocalCatalogData() bool {
	if m != nil {
		return m.CollectedLocalCatalogData
	}
	return false
}

type Setting struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CurrentValue         string      `protobuf:"bytes,2,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"`
	Unit                 *NullString `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	BootValue            *NullString `protobuf:"bytes,4,opt,name=boot_value,json=bootValue,proto3" json:"boot_value,omitempty"`
	ResetValue           *NullString `protobuf:"bytes,5,opt,name=reset_value,json=resetValue,proto3" json:"reset_value,omitempty"`
	Source               *NullString `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	SourceFile           *NullString `protobuf:"bytes,7,opt,name=source_file,json=sourceFile,proto3" json:"source_file,omitempty"`
	SourceLine           *NullString `protobuf:"bytes,8,opt,name=source_line,json=sourceLine,proto3" json:"source_line,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Setting) Reset()         { *m = Setting{} }
func (m *Setting) String() string { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()    {}
func (*Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{4}
}

func (m *Setting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Setting.Unmarshal(m, b)
}
func (m *Setting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Setting.Marshal(b, m, deterministic)
}
func (m *Setting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setting.Merge(m, src)
}
func (m *Setting) XXX_Size() int {
	return xxx_messageInfo_Setting.Size(m)
}
func (m *Setting) XXX_DiscardUnknown() {
	xxx_messageInfo_Setting.DiscardUnknown(m)
}

var xxx_messageInfo_Setting proto.InternalMessageInfo

func (m *Setting) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Setting) GetCurrentValue() string {
	if m != nil {
		return m.CurrentValue
	}
	return ""
}

func (m *Setting) GetUnit() *NullString {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *Setting) GetBootValue() *NullString {
	if m != nil {
		return m.BootValue
	}
	return nil
}

func (m *Setting) GetResetValue() *NullString {
	if m != nil {
		return m.ResetValue
	}
	return nil
}

func (m *Setting) GetSource() *NullString {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Setting) GetSourceFile() *NullString {
	if m != nil {
		return m.SourceFile
	}
	return nil
}

func (m *Setting) GetSourceLine() *NullString {
	if m != nil {
		return m.SourceLine
	}
	return nil
}

type Replication struct {
	// Are we the primary, or a standby?
	InRecovery bool `protobuf:"varint,1,opt,name=in_recovery,json=inRecovery,proto3" json:"in_recovery,omitempty"`
	// Primary information
	CurrentXlogLocation string                `protobuf:"bytes,10,opt,name=current_xlog_location,json=currentXlogLocation,proto3" json:"current_xlog_location,omitempty"`
	StandbyReferences   []*StandbyReference   `protobuf:"bytes,11,rep,name=standby_references,json=standbyReferences,proto3" json:"standby_references,omitempty"`
	StandbyInformations []*StandbyInformation `protobuf:"bytes,12,rep,name=standby_informations,json=standbyInformations,proto3" json:"standby_informations,omitempty"`
	StandbyStatistics   []*StandbyStatistic   `protobuf:"bytes,13,rep,name=standby_statistics,json=standbyStatistics,proto3" json:"standby_statistics,omitempty"`
	// Standby information
	IsStreaming          bool                 `protobuf:"varint,20,opt,name=is_streaming,json=isStreaming,proto3" json:"is_streaming,omitempty"`
	ReceiveLocation      string               `protobuf:"bytes,21,opt,name=receive_location,json=receiveLocation,proto3" json:"receive_location,omitempty"`
	ReplayLocation       string               `protobuf:"bytes,22,opt,name=replay_location,json=replayLocation,proto3" json:"replay_location,omitempty"`
	ApplyByteLag         int64                `protobuf:"varint,23,opt,name=apply_byte_lag,json=applyByteLag,proto3" json:"apply_byte_lag,omitempty"`
	ReplayTimestamp      *timestamp.Timestamp `protobuf:"bytes,24,opt,name=replay_timestamp,json=replayTimestamp,proto3" json:"replay_timestamp,omitempty"`
	ReplayTimestampAge   int64                `protobuf:"varint,25,opt,name=replay_timestamp_age,json=replayTimestampAge,proto3" json:"replay_timestamp_age,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Replication) Reset()         { *m = Replication{} }
func (m *Replication) String() string { return proto.CompactTextString(m) }
func (*Replication) ProtoMessage()    {}
func (*Replication) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{5}
}

func (m *Replication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replication.Unmarshal(m, b)
}
func (m *Replication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replication.Marshal(b, m, deterministic)
}
func (m *Replication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replication.Merge(m, src)
}
func (m *Replication) XXX_Size() int {
	return xxx_messageInfo_Replication.Size(m)
}
func (m *Replication) XXX_DiscardUnknown() {
	xxx_messageInfo_Replication.DiscardUnknown(m)
}

var xxx_messageInfo_Replication proto.InternalMessageInfo

func (m *Replication) GetInRecovery() bool {
	if m != nil {
		return m.InRecovery
	}
	return false
}

func (m *Replication) GetCurrentXlogLocation() string {
	if m != nil {
		return m.CurrentXlogLocation
	}
	return ""
}

func (m *Replication) GetStandbyReferences() []*StandbyReference {
	if m != nil {
		return m.StandbyReferences
	}
	return nil
}

func (m *Replication) GetStandbyInformations() []*StandbyInformation {
	if m != nil {
		return m.StandbyInformations
	}
	return nil
}

func (m *Replication) GetStandbyStatistics() []*StandbyStatistic {
	if m != nil {
		return m.StandbyStatistics
	}
	return nil
}

func (m *Replication) GetIsStreaming() bool {
	if m != nil {
		return m.IsStreaming
	}
	return false
}

func (m *Replication) GetReceiveLocation() string {
	if m != nil {
		return m.ReceiveLocation
	}
	return ""
}

func (m *Replication) GetReplayLocation() string {
	if m != nil {
		return m.ReplayLocation
	}
	return ""
}

func (m *Replication) GetApplyByteLag() int64 {
	if m != nil {
		return m.ApplyByteLag
	}
	return 0
}

func (m *Replication) GetReplayTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.ReplayTimestamp
	}
	return nil
}

func (m *Replication) GetReplayTimestampAge() int64 {
	if m != nil {
		return m.ReplayTimestampAge
	}
	return 0
}

type StandbyReference struct {
	ClientAddr           string   `protobuf:"bytes,1,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandbyReference) Reset()         { *m = StandbyReference{} }
func (m *StandbyReference) String() string { return proto.CompactTextString(m) }
func (*StandbyReference) ProtoMessage()    {}
func (*StandbyReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{6}
}

func (m *StandbyReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandbyReference.Unmarshal(m, b)
}
func (m *StandbyReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandbyReference.Marshal(b, m, deterministic)
}
func (m *StandbyReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandbyReference.Merge(m, src)
}
func (m *StandbyReference) XXX_Size() int {
	return xxx_messageInfo_StandbyReference.Size(m)
}
func (m *StandbyReference) XXX_DiscardUnknown() {
	xxx_messageInfo_StandbyReference.DiscardUnknown(m)
}

var xxx_messageInfo_StandbyReference proto.InternalMessageInfo

func (m *StandbyReference) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

type StandbyInformation struct {
	StandbyIdx           int32                `protobuf:"varint,1,opt,name=standby_idx,json=standbyIdx,proto3" json:"standby_idx,omitempty"`
	RoleIdx              int32                `protobuf:"varint,2,opt,name=role_idx,json=roleIdx,proto3" json:"role_idx,omitempty"`
	Pid                  int64                `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	ApplicationName      string               `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	ClientHostname       string               `protobuf:"bytes,5,opt,name=client_hostname,json=clientHostname,proto3" json:"client_hostname,omitempty"`
	ClientPort           int32                `protobuf:"varint,6,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	BackendStart         *timestamp.Timestamp `protobuf:"bytes,7,opt,name=backend_start,json=backendStart,proto3" json:"backend_start,omitempty"`
	SyncPriority         int32                `protobuf:"varint,8,opt,name=sync_priority,json=syncPriority,proto3" json:"sync_priority,omitempty"`
	SyncState            string               `protobuf:"bytes,9,opt,name=sync_state,json=syncState,proto3" json:"sync_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StandbyInformation) Reset()         { *m = StandbyInformation{} }
func (m *StandbyInformation) String() string { return proto.CompactTextString(m) }
func (*StandbyInformation) ProtoMessage()    {}
func (*StandbyInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{7}
}

func (m *StandbyInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandbyInformation.Unmarshal(m, b)
}
func (m *StandbyInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandbyInformation.Marshal(b, m, deterministic)
}
func (m *StandbyInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandbyInformation.Merge(m, src)
}
func (m *StandbyInformation) XXX_Size() int {
	return xxx_messageInfo_StandbyInformation.Size(m)
}
func (m *StandbyInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_StandbyInformation.DiscardUnknown(m)
}

var xxx_messageInfo_StandbyInformation proto.InternalMessageInfo

func (m *StandbyInformation) GetStandbyIdx() int32 {
	if m != nil {
		return m.StandbyIdx
	}
	return 0
}

func (m *StandbyInformation) GetRoleIdx() int32 {
	if m != nil {
		return m.RoleIdx
	}
	return 0
}

func (m *StandbyInformation) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *StandbyInformation) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

func (m *StandbyInformation) GetClientHostname() string {
	if m != nil {
		return m.ClientHostname
	}
	return ""
}

func (m *StandbyInformation) GetClientPort() int32 {
	if m != nil {
		return m.ClientPort
	}
	return 0
}

func (m *StandbyInformation) GetBackendStart() *timestamp.Timestamp {
	if m != nil {
		return m.BackendStart
	}
	return nil
}

func (m *StandbyInformation) GetSyncPriority() int32 {
	if m != nil {
		return m.SyncPriority
	}
	return 0
}

func (m *StandbyInformation) GetSyncState() string {
	if m != nil {
		return m.SyncState
	}
	return ""
}

type StandbyStatistic struct {
	StandbyIdx           int32    `protobuf:"varint,1,opt,name=standby_idx,json=standbyIdx,proto3" json:"standby_idx,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	SentLocation         string   `protobuf:"bytes,3,opt,name=sent_location,json=sentLocation,proto3" json:"sent_location,omitempty"`
	WriteLocation        string   `protobuf:"bytes,4,opt,name=write_location,json=writeLocation,proto3" json:"write_location,omitempty"`
	FlushLocation        string   `protobuf:"bytes,5,opt,name=flush_location,json=flushLocation,proto3" json:"flush_location,omitempty"`
	ReplayLocation       string   `protobuf:"bytes,6,opt,name=replay_location,json=replayLocation,proto3" json:"replay_location,omitempty"`
	RemoteByteLag        int64    `protobuf:"varint,7,opt,name=remote_byte_lag,json=remoteByteLag,proto3" json:"remote_byte_lag,omitempty"`
	LocalByteLag         int64    `protobuf:"varint,8,opt,name=local_byte_lag,json=localByteLag,proto3" json:"local_byte_lag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandbyStatistic) Reset()         { *m = StandbyStatistic{} }
func (m *StandbyStatistic) String() string { return proto.CompactTextString(m) }
func (*StandbyStatistic) ProtoMessage()    {}
func (*StandbyStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{8}
}

func (m *StandbyStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandbyStatistic.Unmarshal(m, b)
}
func (m *StandbyStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandbyStatistic.Marshal(b, m, deterministic)
}
func (m *StandbyStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandbyStatistic.Merge(m, src)
}
func (m *StandbyStatistic) XXX_Size() int {
	return xxx_messageInfo_StandbyStatistic.Size(m)
}
func (m *StandbyStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_StandbyStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_StandbyStatistic proto.InternalMessageInfo

func (m *StandbyStatistic) GetStandbyIdx() int32 {
	if m != nil {
		return m.StandbyIdx
	}
	return 0
}

func (m *StandbyStatistic) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *StandbyStatistic) GetSentLocation() string {
	if m != nil {
		return m.SentLocation
	}
	return ""
}

func (m *StandbyStatistic) GetWriteLocation() string {
	if m != nil {
		return m.WriteLocation
	}
	return ""
}

func (m *StandbyStatistic) GetFlushLocation() string {
	if m != nil {
		return m.FlushLocation
	}
	return ""
}

func (m *StandbyStatistic) GetReplayLocation() string {
	if m != nil {
		return m.ReplayLocation
	}
	return ""
}

func (m *StandbyStatistic) GetRemoteByteLag() int64 {
	if m != nil {
		return m.RemoteByteLag
	}
	return 0
}

func (m *StandbyStatistic) GetLocalByteLag() int64 {
	if m != nil {
		return m.LocalByteLag
	}
	return 0
}

type BackendCountStatistic struct {
	HasRoleIdx           bool                               `protobuf:"varint,1,opt,name=has_role_idx,json=hasRoleIdx,proto3" json:"has_role_idx,omitempty"`
	RoleIdx              int32                              `protobuf:"varint,2,opt,name=role_idx,json=roleIdx,proto3" json:"role_idx,omitempty"`
	HasDatabaseIdx       bool                               `protobuf:"varint,3,opt,name=has_database_idx,json=hasDatabaseIdx,proto3" json:"has_database_idx,omitempty"`
	DatabaseIdx          int32                              `protobuf:"varint,4,opt,name=database_idx,json=databaseIdx,proto3" json:"database_idx,omitempty"`
	State                BackendCountStatistic_BackendState `protobuf:"varint,5,opt,name=state,proto3,enum=pganalyze.collector.BackendCountStatistic_BackendState" json:"state,omitempty"`
	BackendType          BackendCountStatistic_BackendType  `protobuf:"varint,6,opt,name=backend_type,json=backendType,proto3,enum=pganalyze.collector.BackendCountStatistic_BackendType" json:"backend_type,omitempty"`
	WaitingForLock       bool                               `protobuf:"varint,7,opt,name=waiting_for_lock,json=waitingForLock,proto3" json:"waiting_for_lock,omitempty"`
	Count                int32                              `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *BackendCountStatistic) Reset()         { *m = BackendCountStatistic{} }
func (m *BackendCountStatistic) String() string { return proto.CompactTextString(m) }
func (*BackendCountStatistic) ProtoMessage()    {}
func (*BackendCountStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{9}
}

func (m *BackendCountStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendCountStatistic.Unmarshal(m, b)
}
func (m *BackendCountStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendCountStatistic.Marshal(b, m, deterministic)
}
func (m *BackendCountStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendCountStatistic.Merge(m, src)
}
func (m *BackendCountStatistic) XXX_Size() int {
	return xxx_messageInfo_BackendCountStatistic.Size(m)
}
func (m *BackendCountStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendCountStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_BackendCountStatistic proto.InternalMessageInfo

func (m *BackendCountStatistic) GetHasRoleIdx() bool {
	if m != nil {
		return m.HasRoleIdx
	}
	return false
}

func (m *BackendCountStatistic) GetRoleIdx() int32 {
	if m != nil {
		return m.RoleIdx
	}
	return 0
}

func (m *BackendCountStatistic) GetHasDatabaseIdx() bool {
	if m != nil {
		return m.HasDatabaseIdx
	}
	return false
}

func (m *BackendCountStatistic) GetDatabaseIdx() int32 {
	if m != nil {
		return m.DatabaseIdx
	}
	return 0
}

func (m *BackendCountStatistic) GetState() BackendCountStatistic_BackendState {
	if m != nil {
		return m.State
	}
	return BackendCountStatistic_UNKNOWN_STATE
}

func (m *BackendCountStatistic) GetBackendType() BackendCountStatistic_BackendType {
	if m != nil {
		return m.BackendType
	}
	return BackendCountStatistic_UNKNOWN_TYPE
}

func (m *BackendCountStatistic) GetWaitingForLock() bool {
	if m != nil {
		return m.WaitingForLock
	}
	return false
}

func (m *BackendCountStatistic) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TablespaceReference struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TablespaceReference) Reset()         { *m = TablespaceReference{} }
func (m *TablespaceReference) String() string { return proto.CompactTextString(m) }
func (*TablespaceReference) ProtoMessage()    {}
func (*TablespaceReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{10}
}

func (m *TablespaceReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TablespaceReference.Unmarshal(m, b)
}
func (m *TablespaceReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TablespaceReference.Marshal(b, m, deterministic)
}
func (m *TablespaceReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TablespaceReference.Merge(m, src)
}
func (m *TablespaceReference) XXX_Size() int {
	return xxx_messageInfo_TablespaceReference.Size(m)
}
func (m *TablespaceReference) XXX_DiscardUnknown() {
	xxx_messageInfo_TablespaceReference.DiscardUnknown(m)
}

var xxx_messageInfo_TablespaceReference proto.InternalMessageInfo

func (m *TablespaceReference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TablespaceInformation struct {
	TablespaceIdx        int32    `protobuf:"varint,1,opt,name=tablespace_idx,json=tablespaceIdx,proto3" json:"tablespace_idx,omitempty"`
	DiskPartitionIdx     int32    `protobuf:"varint,2,opt,name=disk_partition_idx,json=diskPartitionIdx,proto3" json:"disk_partition_idx,omitempty"`
	RoleIdx              int32    `protobuf:"varint,3,opt,name=role_idx,json=roleIdx,proto3" json:"role_idx,omitempty"`
	Config               []string `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TablespaceInformation) Reset()         { *m = TablespaceInformation{} }
func (m *TablespaceInformation) String() string { return proto.CompactTextString(m) }
func (*TablespaceInformation) ProtoMessage()    {}
func (*TablespaceInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{11}
}

func (m *TablespaceInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TablespaceInformation.Unmarshal(m, b)
}
func (m *TablespaceInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TablespaceInformation.Marshal(b, m, deterministic)
}
func (m *TablespaceInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TablespaceInformation.Merge(m, src)
}
func (m *TablespaceInformation) XXX_Size() int {
	return xxx_messageInfo_TablespaceInformation.Size(m)
}
func (m *TablespaceInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_TablespaceInformation.DiscardUnknown(m)
}

var xxx_messageInfo_TablespaceInformation proto.InternalMessageInfo

func (m *TablespaceInformation) GetTablespaceIdx() int32 {
	if m != nil {
		return m.TablespaceIdx
	}
	return 0
}

func (m *TablespaceInformation) GetDiskPartitionIdx() int32 {
	if m != nil {
		return m.DiskPartitionIdx
	}
	return 0
}

func (m *TablespaceInformation) GetRoleIdx() int32 {
	if m != nil {
		return m.RoleIdx
	}
	return 0
}

func (m *TablespaceInformation) GetConfig() []string {
	if m != nil {
		return m.Config
	}
	return nil
}

type QueryStatistic struct {
	QueryIdx             int32    `protobuf:"varint,1,opt,name=query_idx,json=queryIdx,proto3" json:"query_idx,omitempty"`
	Calls                int64    `protobuf:"varint,2,opt,name=calls,proto3" json:"calls,omitempty"`
	TotalTime            float64  `protobuf:"fixed64,3,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`
	Rows                 int64    `protobuf:"varint,4,opt,name=rows,proto3" json:"rows,omitempty"`
	SharedBlksHit        int64    `protobuf:"varint,5,opt,name=shared_blks_hit,json=sharedBlksHit,proto3" json:"shared_blks_hit,omitempty"`
	SharedBlksRead       int64    `protobuf:"varint,6,opt,name=shared_blks_read,json=sharedBlksRead,proto3" json:"shared_blks_read,omitempty"`
	SharedBlksDirtied    int64    `protobuf:"varint,7,opt,name=shared_blks_dirtied,json=sharedBlksDirtied,proto3" json:"shared_blks_dirtied,omitempty"`
	SharedBlksWritten    int64    `protobuf:"varint,8,opt,name=shared_blks_written,json=sharedBlksWritten,proto3" json:"shared_blks_written,omitempty"`
	LocalBlksHit         int64    `protobuf:"varint,9,opt,name=local_blks_hit,json=localBlksHit,proto3" json:"local_blks_hit,omitempty"`
	LocalBlksRead        int64    `protobuf:"varint,10,opt,name=local_blks_read,json=localBlksRead,proto3" json:"local_blks_read,omitempty"`
	LocalBlksDirtied     int64    `protobuf:"varint,11,opt,name=local_blks_dirtied,json=localBlksDirtied,proto3" json:"local_blks_dirtied,omitempty"`
	LocalBlksWritten     int64    `protobuf:"varint,12,opt,name=local_blks_written,json=localBlksWritten,proto3" json:"local_blks_written,omitempty"`
	TempBlksRead         int64    `protobuf:"varint,13,opt,name=temp_blks_read,json=tempBlksRead,proto3" json:"temp_blks_read,omitempty"`
	TempBlksWritten      int64    `protobuf:"varint,14,opt,name=temp_blks_written,json=tempBlksWritten,proto3" json:"temp_blks_written,omitempty"`
	BlkReadTime          float64  `protobuf:"fixed64,15,opt,name=blk_read_time,json=blkReadTime,proto3" json:"blk_read_time,omitempty"`
	BlkWriteTime         float64  `protobuf:"fixed64,16,opt,name=blk_write_time,json=blkWriteTime,proto3" json:"blk_write_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryStatistic) Reset()         { *m = QueryStatistic{} }
func (m *QueryStatistic) String() string { return proto.CompactTextString(m) }
func (*QueryStatistic) ProtoMessage()    {}
func (*QueryStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{12}
}

func (m *QueryStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryStatistic.Unmarshal(m, b)
}
func (m *QueryStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryStatistic.Marshal(b, m, deterministic)
}
func (m *QueryStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryStatistic.Merge(m, src)
}
func (m *QueryStatistic) XXX_Size() int {
	return xxx_messageInfo_QueryStatistic.Size(m)
}
func (m *QueryStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_QueryStatistic proto.InternalMessageInfo

func (m *QueryStatistic) GetQueryIdx() int32 {
	if m != nil {
		return m.QueryIdx
	}
	return 0
}

func (m *QueryStatistic) GetCalls() int64 {
	if m != nil {
		return m.Calls
	}
	return 0
}

func (m *QueryStatistic) GetTotalTime() float64 {
	if m != nil {
		return m.TotalTime
	}
	return 0
}

func (m *QueryStatistic) GetRows() int64 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *QueryStatistic) GetSharedBlksHit() int64 {
	if m != nil {
		return m.SharedBlksHit
	}
	return 0
}

func (m *QueryStatistic) GetSharedBlksRead() int64 {
	if m != nil {
		return m.SharedBlksRead
	}
	return 0
}

func (m *QueryStatistic) GetSharedBlksDirtied() int64 {
	if m != nil {
		return m.SharedBlksDirtied
	}
	return 0
}

func (m *QueryStatistic) GetSharedBlksWritten() int64 {
	if m != nil {
		return m.SharedBlksWritten
	}
	return 0
}

func (m *QueryStatistic) GetLocalBlksHit() int64 {
	if m != nil {
		return m.LocalBlksHit
	}
	return 0
}

func (m *QueryStatistic) GetLocalBlksRead() int64 {
	if m != nil {
		return m.LocalBlksRead
	}
	return 0
}

func (m *QueryStatistic) GetLocalBlksDirtied() int64 {
	if m != nil {
		return m.LocalBlksDirtied
	}
	return 0
}

func (m *QueryStatistic) GetLocalBlksWritten() int64 {
	if m != nil {
		return m.LocalBlksWritten
	}
	return 0
}

func (m *QueryStatistic) GetTempBlksRead() int64 {
	if m != nil {
		return m.TempBlksRead
	}
	return 0
}

func (m *QueryStatistic) GetTempBlksWritten() int64 {
	if m != nil {
		return m.TempBlksWritten
	}
	return 0
}

func (m *QueryStatistic) GetBlkReadTime() float64 {
	if m != nil {
		return m.BlkReadTime
	}
	return 0
}

func (m *QueryStatistic) GetBlkWriteTime() float64 {
	if m != nil {
		return m.BlkWriteTime
	}
	return 0
}

type HistoricQueryStatistics struct {
	CollectedAt           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=collected_at,json=collectedAt,proto3" json:"collected_at,omitempty"`
	CollectedIntervalSecs uint32               `protobuf:"varint,2,opt,name=collected_interval_secs,json=collectedIntervalSecs,proto3" json:"collected_interval_secs,omitempty"`
	Statistics            []*QueryStatistic    `protobuf:"bytes,3,rep,name=statistics,proto3" json:"statistics,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *HistoricQueryStatistics) Reset()         { *m = HistoricQueryStatistics{} }
func (m *HistoricQueryStatistics) String() string { return proto.CompactTextString(m) }
func (*HistoricQueryStatistics) ProtoMessage()    {}
func (*HistoricQueryStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{13}
}

func (m *HistoricQueryStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricQueryStatistics.Unmarshal(m, b)
}
func (m *HistoricQueryStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricQueryStatistics.Marshal(b, m, deterministic)
}
func (m *HistoricQueryStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricQueryStatistics.Merge(m, src)
}
func (m *HistoricQueryStatistics) XXX_Size() int {
	return xxx_messageInfo_HistoricQueryStatistics.Size(m)
}
func (m *HistoricQueryStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricQueryStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricQueryStatistics proto.InternalMessageInfo

func (m *HistoricQueryStatistics) GetCollectedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CollectedAt
	}
	return nil
}

func (m *HistoricQueryStatistics) GetCollectedIntervalSecs() uint32 {
	if m != nil {
		return m.CollectedIntervalSecs
	}
	return 0
}

func (m *HistoricQueryStatistics) GetStatistics() []*QueryStatistic {
	if m != nil {
		return m.Statistics
	}
	return nil
}

type RelationInformation struct {
	RelationIdx            int32                             `protobuf:"varint,1,opt,name=relation_idx,json=relationIdx,proto3" json:"relation_idx,omitempty"`
	RelationType           string                            `protobuf:"bytes,2,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"`
	ViewDefinition         *NullString                       `protobuf:"bytes,3,opt,name=view_definition,json=viewDefinition,proto3" json:"view_definition,omitempty"`
	Columns                []*RelationInformation_Column     `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	Constraints            []*RelationInformation_Constraint `protobuf:"bytes,5,rep,name=constraints,proto3" json:"constraints,omitempty"`
	PersistenceType        string                            `protobuf:"bytes,6,opt,name=persistence_type,json=persistenceType,proto3" json:"persistence_type,omitempty"`
	Fillfactor             int32                             `protobuf:"varint,7,opt,name=fillfactor,proto3" json:"fillfactor,omitempty"`
	HasOids                bool                              `protobuf:"varint,8,opt,name=has_oids,json=hasOids,proto3" json:"has_oids,omitempty"`
	HasInheritanceChildren bool                              `protobuf:"varint,9,opt,name=has_inheritance_children,json=hasInheritanceChildren,proto3" json:"has_inheritance_children,omitempty"`
	HasToast               bool                              `protobuf:"varint,10,opt,name=has_toast,json=hasToast,proto3" json:"has_toast,omitempty"`
	FrozenXid              uint32                            `protobuf:"varint,11,opt,name=frozen_xid,json=frozenXid,proto3" json:"frozen_xid,omitempty"`
	MinimumMultixactXid    uint32                            `protobuf:"varint,12,opt,name=minimum_multixact_xid,json=minimumMultixactXid,proto3" json:"minimum_multixact_xid,omitempty"`
	// True if another process is currently holding an AccessExclusiveLock on this
	// relation, this also means we won't have columns/index/constraints information
	ExclusivelyLocked    bool              `protobuf:"varint,13,opt,name=exclusively_locked,json=exclusivelyLocked,proto3" json:"exclusively_locked,omitempty"`
	Options              map[string]string `protobuf:"bytes,14,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ParentRelationIdx    int32             `protobuf:"varint,15,opt,name=parent_relation_idx,json=parentRelationIdx,proto3" json:"parent_relation_idx,omitempty"`
	HasParentRelation    bool              `protobuf:"varint,16,opt,name=has_parent_relation,json=hasParentRelation,proto3" json:"has_parent_relation,omitempty"`
	PartitionBoundary    string            `protobuf:"bytes,17,opt,name=partition_boundary,json=partitionBoundary,proto3" json:"partition_boundary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RelationInformation) Reset()         { *m = RelationInformation{} }
func (m *RelationInformation) String() string { return proto.CompactTextString(m) }
func (*RelationInformation) ProtoMessage()    {}
func (*RelationInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{14}
}

func (m *RelationInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationInformation.Unmarshal(m, b)
}
func (m *RelationInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationInformation.Marshal(b, m, deterministic)
}
func (m *RelationInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationInformation.Merge(m, src)
}
func (m *RelationInformation) XXX_Size() int {
	return xxx_messageInfo_RelationInformation.Size(m)
}
func (m *RelationInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationInformation.DiscardUnknown(m)
}

var xxx_messageInfo_RelationInformation proto.InternalMessageInfo

func (m *RelationInformation) GetRelationIdx() int32 {
	if m != nil {
		return m.RelationIdx
	}
	return 0
}

func (m *RelationInformation) GetRelationType() string {
	if m != nil {
		return m.RelationType
	}
	return ""
}

func (m *RelationInformation) GetViewDefinition() *NullString {
	if m != nil {
		return m.ViewDefinition
	}
	return nil
}

func (m *RelationInformation) GetColumns() []*RelationInformation_Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *RelationInformation) GetConstraints() []*RelationInformation_Constraint {
	if m != nil {
		return m.Constraints
	}
	return nil
}

func (m *RelationInformation) GetPersistenceType() string {
	if m != nil {
		return m.PersistenceType
	}
	return ""
}

func (m *RelationInformation) GetFillfactor() int32 {
	if m != nil {
		return m.Fillfactor
	}
	return 0
}

func (m *RelationInformation) GetHasOids() bool {
	if m != nil {
		return m.HasOids
	}
	return false
}

func (m *RelationInformation) GetHasInheritanceChildren() bool {
	if m != nil {
		return m.HasInheritanceChildren
	}
	return false
}

func (m *RelationInformation) GetHasToast() bool {
	if m != nil {
		return m.HasToast
	}
	return false
}

func (m *RelationInformation) GetFrozenXid() uint32 {
	if m != nil {
		return m.FrozenXid
	}
	return 0
}

func (m *RelationInformation) GetMinimumMultixactXid() uint32 {
	if m != nil {
		return m.MinimumMultixactXid
	}
	return 0
}

func (m *RelationInformation) GetExclusivelyLocked() bool {
	if m != nil {
		return m.ExclusivelyLocked
	}
	return false
}

func (m *RelationInformation) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *RelationInformation) GetParentRelationIdx() int32 {
	if m != nil {
		return m.ParentRelationIdx
	}
	return 0
}

func (m *RelationInformation) GetHasParentRelation() bool {
	if m != nil {
		return m.HasParentRelation
	}
	return false
}

func (m *RelationInformation) GetPartitionBoundary() string {
	if m != nil {
		return m.PartitionBoundary
	}
	return ""
}

type RelationInformation_Column struct {
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DataType             string      `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DefaultValue         *NullString `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	NotNull              bool        `protobuf:"varint,5,opt,name=not_null,json=notNull,proto3" json:"not_null,omitempty"`
	Position             int32       `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RelationInformation_Column) Reset()         { *m = RelationInformation_Column{} }
func (m *RelationInformation_Column) String() string { return proto.CompactTextString(m) }
func (*RelationInformation_Column) ProtoMessage()    {}
func (*RelationInformation_Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{14, 1}
}

func (m *RelationInformation_Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationInformation_Column.Unmarshal(m, b)
}
func (m *RelationInformation_Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationInformation_Column.Marshal(b, m, deterministic)
}
func (m *RelationInformation_Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationInformation_Column.Merge(m, src)
}
func (m *RelationInformation_Column) XXX_Size() int {
	return xxx_messageInfo_RelationInformation_Column.Size(m)
}
func (m *RelationInformation_Column) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationInformation_Column.DiscardUnknown(m)
}

var xxx_messageInfo_RelationInformation_Column proto.InternalMessageInfo

func (m *RelationInformation_Column) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RelationInformation_Column) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *RelationInformation_Column) GetDefaultValue() *NullString {
	if m != nil {
		return m.DefaultValue
	}
	return nil
}

func (m *RelationInformation_Column) GetNotNull() bool {
	if m != nil {
		return m.NotNull
	}
	return false
}

func (m *RelationInformation_Column) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type RelationInformation_Constraint struct {
	ForeignRelationIdx   int32    `protobuf:"varint,1,opt,name=foreign_relation_idx,json=foreignRelationIdx,proto3" json:"foreign_relation_idx,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ConstraintDef        string   `protobuf:"bytes,4,opt,name=constraint_def,json=constraintDef,proto3" json:"constraint_def,omitempty"`
	Columns              []int32  `protobuf:"varint,5,rep,packed,name=columns,proto3" json:"columns,omitempty"`
	ForeignColumns       []int32  `protobuf:"varint,6,rep,packed,name=foreign_columns,json=foreignColumns,proto3" json:"foreign_columns,omitempty"`
	ForeignUpdateType    string   `protobuf:"bytes,7,opt,name=foreign_update_type,json=foreignUpdateType,proto3" json:"foreign_update_type,omitempty"`
	ForeignDeleteType    string   `protobuf:"bytes,8,opt,name=foreign_delete_type,json=foreignDeleteType,proto3" json:"foreign_delete_type,omitempty"`
	ForeignMatchType     string   `protobuf:"bytes,9,opt,name=foreign_match_type,json=foreignMatchType,proto3" json:"foreign_match_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationInformation_Constraint) Reset()         { *m = RelationInformation_Constraint{} }
func (m *RelationInformation_Constraint) String() string { return proto.CompactTextString(m) }
func (*RelationInformation_Constraint) ProtoMessage()    {}
func (*RelationInformation_Constraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{14, 2}
}

func (m *RelationInformation_Constraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationInformation_Constraint.Unmarshal(m, b)
}
func (m *RelationInformation_Constraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationInformation_Constraint.Marshal(b, m, deterministic)
}
func (m *RelationInformation_Constraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationInformation_Constraint.Merge(m, src)
}
func (m *RelationInformation_Constraint) XXX_Size() int {
	return xxx_messageInfo_RelationInformation_Constraint.Size(m)
}
func (m *RelationInformation_Constraint) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationInformation_Constraint.DiscardUnknown(m)
}

var xxx_messageInfo_RelationInformation_Constraint proto.InternalMessageInfo

func (m *RelationInformation_Constraint) GetForeignRelationIdx() int32 {
	if m != nil {
		return m.ForeignRelationIdx
	}
	return 0
}

func (m *RelationInformation_Constraint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RelationInformation_Constraint) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RelationInformation_Constraint) GetConstraintDef() string {
	if m != nil {
		return m.ConstraintDef
	}
	return ""
}

func (m *RelationInformation_Constraint) GetColumns() []int32 {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *RelationInformation_Constraint) GetForeignColumns() []int32 {
	if m != nil {
		return m.ForeignColumns
	}
	return nil
}

func (m *RelationInformation_Constraint) GetForeignUpdateType() string {
	if m != nil {
		return m.ForeignUpdateType
	}
	return ""
}

func (m *RelationInformation_Constraint) GetForeignDeleteType() string {
	if m != nil {
		return m.ForeignDeleteType
	}
	return ""
}

func (m *RelationInformation_Constraint) GetForeignMatchType() string {
	if m != nil {
		return m.ForeignMatchType
	}
	return ""
}

type RelationStatistic struct {
	RelationIdx          int32    `protobuf:"varint,1,opt,name=relation_idx,json=relationIdx,proto3" json:"relation_idx,omitempty"`
	SizeBytes            int64    `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	SeqScan              int64    `protobuf:"varint,3,opt,name=seq_scan,json=seqScan,proto3" json:"seq_scan,omitempty"`
	SeqTupRead           int64    `protobuf:"varint,4,opt,name=seq_tup_read,json=seqTupRead,proto3" json:"seq_tup_read,omitempty"`
	IdxScan              int64    `protobuf:"varint,5,opt,name=idx_scan,json=idxScan,proto3" json:"idx_scan,omitempty"`
	IdxTupFetch          int64    `protobuf:"varint,6,opt,name=idx_tup_fetch,json=idxTupFetch,proto3" json:"idx_tup_fetch,omitempty"`
	NTupIns              int64    `protobuf:"varint,7,opt,name=n_tup_ins,json=nTupIns,proto3" json:"n_tup_ins,omitempty"`
	NTupUpd              int64    `protobuf:"varint,8,opt,name=n_tup_upd,json=nTupUpd,proto3" json:"n_tup_upd,omitempty"`
	NTupDel              int64    `protobuf:"varint,9,opt,name=n_tup_del,json=nTupDel,proto3" json:"n_tup_del,omitempty"`
	NTupHotUpd           int64    `protobuf:"varint,10,opt,name=n_tup_hot_upd,json=nTupHotUpd,proto3" json:"n_tup_hot_upd,omitempty"`
	NLiveTup             int64    `protobuf:"varint,11,opt,name=n_live_tup,json=nLiveTup,proto3" json:"n_live_tup,omitempty"`
	NDeadTup             int64    `protobuf:"varint,12,opt,name=n_dead_tup,json=nDeadTup,proto3" json:"n_dead_tup,omitempty"`
	NModSinceAnalyze     int64    `protobuf:"varint,13,opt,name=n_mod_since_analyze,json=nModSinceAnalyze,proto3" json:"n_mod_since_analyze,omitempty"`
	HeapBlksRead         int64    `protobuf:"varint,18,opt,name=heap_blks_read,json=heapBlksRead,proto3" json:"heap_blks_read,omitempty"`
	HeapBlksHit          int64    `protobuf:"varint,19,opt,name=heap_blks_hit,json=heapBlksHit,proto3" json:"heap_blks_hit,omitempty"`
	IdxBlksRead          int64    `protobuf:"varint,20,opt,name=idx_blks_read,json=idxBlksRead,proto3" json:"idx_blks_read,omitempty"`
	IdxBlksHit           int64    `protobuf:"varint,21,opt,name=idx_blks_hit,json=idxBlksHit,proto3" json:"idx_blks_hit,omitempty"`
	ToastBlksRead        int64    `protobuf:"varint,22,opt,name=toast_blks_read,json=toastBlksRead,proto3" json:"toast_blks_read,omitempty"`
	ToastBlksHit         int64    `protobuf:"varint,23,opt,name=toast_blks_hit,json=toastBlksHit,proto3" json:"toast_blks_hit,omitempty"`
	TidxBlksRead         int64    `protobuf:"varint,24,opt,name=tidx_blks_read,json=tidxBlksRead,proto3" json:"tidx_blks_read,omitempty"`
	TidxBlksHit          int64    `protobuf:"varint,25,opt,name=tidx_blks_hit,json=tidxBlksHit,proto3" json:"tidx_blks_hit,omitempty"`
	ToastSizeBytes       int64    `protobuf:"varint,26,opt,name=toast_size_bytes,json=toastSizeBytes,proto3" json:"toast_size_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelationStatistic) Reset()         { *m = RelationStatistic{} }
func (m *RelationStatistic) String() string { return proto.CompactTextString(m) }
func (*RelationStatistic) ProtoMessage()    {}
func (*RelationStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{15}
}

func (m *RelationStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationStatistic.Unmarshal(m, b)
}
func (m *RelationStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationStatistic.Marshal(b, m, deterministic)
}
func (m *RelationStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationStatistic.Merge(m, src)
}
func (m *RelationStatistic) XXX_Size() int {
	return xxx_messageInfo_RelationStatistic.Size(m)
}
func (m *RelationStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_RelationStatistic proto.InternalMessageInfo

func (m *RelationStatistic) GetRelationIdx() int32 {
	if m != nil {
		return m.RelationIdx
	}
	return 0
}

func (m *RelationStatistic) GetSizeBytes() int64 {
	if m != nil {
		return m.SizeBytes
	}
	return 0
}

func (m *RelationStatistic) GetSeqScan() int64 {
	if m != nil {
		return m.SeqScan
	}
	return 0
}

func (m *RelationStatistic) GetSeqTupRead() int64 {
	if m != nil {
		return m.SeqTupRead
	}
	return 0
}

func (m *RelationStatistic) GetIdxScan() int64 {
	if m != nil {
		return m.IdxScan
	}
	return 0
}

func (m *RelationStatistic) GetIdxTupFetch() int64 {
	if m != nil {
		return m.IdxTupFetch
	}
	return 0
}

func (m *RelationStatistic) GetNTupIns() int64 {
	if m != nil {
		return m.NTupIns
	}
	return 0
}

func (m *RelationStatistic) GetNTupUpd() int64 {
	if m != nil {
		return m.NTupUpd
	}
	return 0
}

func (m *RelationStatistic) GetNTupDel() int64 {
	if m != nil {
		return m.NTupDel
	}
	return 0
}

func (m *RelationStatistic) GetNTupHotUpd() int64 {
	if m != nil {
		return m.NTupHotUpd
	}
	return 0
}

func (m *RelationStatistic) GetNLiveTup() int64 {
	if m != nil {
		return m.NLiveTup
	}
	return 0
}

func (m *RelationStatistic) GetNDeadTup() int64 {
	if m != nil {
		return m.NDeadTup
	}
	return 0
}

func (m *RelationStatistic) GetNModSinceAnalyze() int64 {
	if m != nil {
		return m.NModSinceAnalyze
	}
	return 0
}

func (m *RelationStatistic) GetHeapBlksRead() int64 {
	if m != nil {
		return m.HeapBlksRead
	}
	return 0
}

func (m *RelationStatistic) GetHeapBlksHit() int64 {
	if m != nil {
		return m.HeapBlksHit
	}
	return 0
}

func (m *RelationStatistic) GetIdxBlksRead() int64 {
	if m != nil {
		return m.IdxBlksRead
	}
	return 0
}

func (m *RelationStatistic) GetIdxBlksHit() int64 {
	if m != nil {
		return m.IdxBlksHit
	}
	return 0
}

func (m *RelationStatistic) GetToastBlksRead() int64 {
	if m != nil {
		return m.ToastBlksRead
	}
	return 0
}

func (m *RelationStatistic) GetToastBlksHit() int64 {
	if m != nil {
		return m.ToastBlksHit
	}
	return 0
}

func (m *RelationStatistic) GetTidxBlksRead() int64 {
	if m != nil {
		return m.TidxBlksRead
	}
	return 0
}

func (m *RelationStatistic) GetTidxBlksHit() int64 {
	if m != nil {
		return m.TidxBlksHit
	}
	return 0
}

func (m *RelationStatistic) GetToastSizeBytes() int64 {
	if m != nil {
		return m.ToastSizeBytes
	}
	return 0
}

type RelationEvent struct {
	RelationIdx           int32                   `protobuf:"varint,1,opt,name=relation_idx,json=relationIdx,proto3" json:"relation_idx,omitempty"`
	Type                  RelationEvent_EventType `protobuf:"varint,2,opt,name=type,proto3,enum=pganalyze.collector.RelationEvent_EventType" json:"type,omitempty"`
	OccurredAt            *timestamp.Timestamp    `protobuf:"bytes,3,opt,name=occurred_at,json=occurredAt,proto3" json:"occurred_at,omitempty"`
	ApproximateOccurredAt bool                    `protobuf:"varint,4,opt,name=approximate_occurred_at,json=approximateOccurredAt,proto3" json:"approximate_occurred_at,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *RelationEvent) Reset()         { *m = RelationEvent{} }
func (m *RelationEvent) String() string { return proto.CompactTextString(m) }
func (*RelationEvent) ProtoMessage()    {}
func (*RelationEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{16}
}

func (m *RelationEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelationEvent.Unmarshal(m, b)
}
func (m *RelationEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelationEvent.Marshal(b, m, deterministic)
}
func (m *RelationEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelationEvent.Merge(m, src)
}
func (m *RelationEvent) XXX_Size() int {
	return xxx_messageInfo_RelationEvent.Size(m)
}
func (m *RelationEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RelationEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RelationEvent proto.InternalMessageInfo

func (m *RelationEvent) GetRelationIdx() int32 {
	if m != nil {
		return m.RelationIdx
	}
	return 0
}

func (m *RelationEvent) GetType() RelationEvent_EventType {
	if m != nil {
		return m.Type
	}
	return RelationEvent_MANUAL_VACUUM
}

func (m *RelationEvent) GetOccurredAt() *timestamp.Timestamp {
	if m != nil {
		return m.OccurredAt
	}
	return nil
}

func (m *RelationEvent) GetApproximateOccurredAt() bool {
	if m != nil {
		return m.ApproximateOccurredAt
	}
	return false
}

type IndexInformation struct {
	IndexIdx             int32       `protobuf:"varint,1,opt,name=index_idx,json=indexIdx,proto3" json:"index_idx,omitempty"`
	RelationIdx          int32       `protobuf:"varint,2,opt,name=relation_idx,json=relationIdx,proto3" json:"relation_idx,omitempty"`
	Columns              []int32     `protobuf:"varint,3,rep,packed,name=columns,proto3" json:"columns,omitempty"`
	IndexDef             string      `protobuf:"bytes,4,opt,name=index_def,json=indexDef,proto3" json:"index_def,omitempty"`
	ConstraintDef        *NullString `protobuf:"bytes,5,opt,name=constraint_def,json=constraintDef,proto3" json:"constraint_def,omitempty"`
	IsPrimary            bool        `protobuf:"varint,6,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	IsUnique             bool        `protobuf:"varint,7,opt,name=is_unique,json=isUnique,proto3" json:"is_unique,omitempty"`
	IsValid              bool        `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Fillfactor           int32       `protobuf:"varint,9,opt,name=fillfactor,proto3" json:"fillfactor,omitempty"`
	IndexType            string      `protobuf:"bytes,10,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IndexInformation) Reset()         { *m = IndexInformation{} }
func (m *IndexInformation) String() string { return proto.CompactTextString(m) }
func (*IndexInformation) ProtoMessage()    {}
func (*IndexInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{17}
}

func (m *IndexInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexInformation.Unmarshal(m, b)
}
func (m *IndexInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexInformation.Marshal(b, m, deterministic)
}
func (m *IndexInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexInformation.Merge(m, src)
}
func (m *IndexInformation) XXX_Size() int {
	return xxx_messageInfo_IndexInformation.Size(m)
}
func (m *IndexInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexInformation.DiscardUnknown(m)
}

var xxx_messageInfo_IndexInformation proto.InternalMessageInfo

func (m *IndexInformation) GetIndexIdx() int32 {
	if m != nil {
		return m.IndexIdx
	}
	return 0
}

func (m *IndexInformation) GetRelationIdx() int32 {
	if m != nil {
		return m.RelationIdx
	}
	return 0
}

func (m *IndexInformation) GetColumns() []int32 {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *IndexInformation) GetIndexDef() string {
	if m != nil {
		return m.IndexDef
	}
	return ""
}

func (m *IndexInformation) GetConstraintDef() *NullString {
	if m != nil {
		return m.ConstraintDef
	}
	return nil
}

func (m *IndexInformation) GetIsPrimary() bool {
	if m != nil {
		return m.IsPrimary
	}
	return false
}

func (m *IndexInformation) GetIsUnique() bool {
	if m != nil {
		return m.IsUnique
	}
	return false
}

func (m *IndexInformation) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *IndexInformation) GetFillfactor() int32 {
	if m != nil {
		return m.Fillfactor
	}
	return 0
}

func (m *IndexInformation) GetIndexType() string {
	if m != nil {
		return m.IndexType
	}
	return ""
}

type IndexStatistic struct {
	IndexIdx             int32    `protobuf:"varint,1,opt,name=index_idx,json=indexIdx,proto3" json:"index_idx,omitempty"`
	SizeBytes            int64    `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	IdxScan              int64    `protobuf:"varint,3,opt,name=idx_scan,json=idxScan,proto3" json:"idx_scan,omitempty"`
	IdxTupRead           int64    `protobuf:"varint,4,opt,name=idx_tup_read,json=idxTupRead,proto3" json:"idx_tup_read,omitempty"`
	IdxTupFetch          int64    `protobuf:"varint,6,opt,name=idx_tup_fetch,json=idxTupFetch,proto3" json:"idx_tup_fetch,omitempty"`
	IdxBlksRead          int64    `protobuf:"varint,7,opt,name=idx_blks_read,json=idxBlksRead,proto3" json:"idx_blks_read,omitempty"`
	IdxBlksHit           int64    `protobuf:"varint,8,opt,name=idx_blks_hit,json=idxBlksHit,proto3" json:"idx_blks_hit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexStatistic) Reset()         { *m = IndexStatistic{} }
func (m *IndexStatistic) String() string { return proto.CompactTextString(m) }
func (*IndexStatistic) ProtoMessage()    {}
func (*IndexStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{18}
}

func (m *IndexStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexStatistic.Unmarshal(m, b)
}
func (m *IndexStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexStatistic.Marshal(b, m, deterministic)
}
func (m *IndexStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexStatistic.Merge(m, src)
}
func (m *IndexStatistic) XXX_Size() int {
	return xxx_messageInfo_IndexStatistic.Size(m)
}
func (m *IndexStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_IndexStatistic proto.InternalMessageInfo

func (m *IndexStatistic) GetIndexIdx() int32 {
	if m != nil {
		return m.IndexIdx
	}
	return 0
}

func (m *IndexStatistic) GetSizeBytes() int64 {
	if m != nil {
		return m.SizeBytes
	}
	return 0
}

func (m *IndexStatistic) GetIdxScan() int64 {
	if m != nil {
		return m.IdxScan
	}
	return 0
}

func (m *IndexStatistic) GetIdxTupRead() int64 {
	if m != nil {
		return m.IdxTupRead
	}
	return 0
}

func (m *IndexStatistic) GetIdxTupFetch() int64 {
	if m != nil {
		return m.IdxTupFetch
	}
	return 0
}

func (m *IndexStatistic) GetIdxBlksRead() int64 {
	if m != nil {
		return m.IdxBlksRead
	}
	return 0
}

func (m *IndexStatistic) GetIdxBlksHit() int64 {
	if m != nil {
		return m.IdxBlksHit
	}
	return 0
}

type FunctionInformation struct {
	FunctionIdx          int32    `protobuf:"varint,1,opt,name=function_idx,json=functionIdx,proto3" json:"function_idx,omitempty"`
	Language             string   `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Source               string   `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	SourceBin            string   `protobuf:"bytes,5,opt,name=source_bin,json=sourceBin,proto3" json:"source_bin,omitempty"`
	Config               []string `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty"`
	Result               string   `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	Aggregate            bool     `protobuf:"varint,9,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	Window               bool     `protobuf:"varint,10,opt,name=window,proto3" json:"window,omitempty"`
	SecurityDefiner      bool     `protobuf:"varint,11,opt,name=security_definer,json=securityDefiner,proto3" json:"security_definer,omitempty"`
	Leakproof            bool     `protobuf:"varint,12,opt,name=leakproof,proto3" json:"leakproof,omitempty"`
	Strict               bool     `protobuf:"varint,13,opt,name=strict,proto3" json:"strict,omitempty"`
	ReturnsSet           bool     `protobuf:"varint,14,opt,name=returns_set,json=returnsSet,proto3" json:"returns_set,omitempty"`
	Volatile             string   `protobuf:"bytes,15,opt,name=volatile,proto3" json:"volatile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionInformation) Reset()         { *m = FunctionInformation{} }
func (m *FunctionInformation) String() string { return proto.CompactTextString(m) }
func (*FunctionInformation) ProtoMessage()    {}
func (*FunctionInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{19}
}

func (m *FunctionInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionInformation.Unmarshal(m, b)
}
func (m *FunctionInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionInformation.Marshal(b, m, deterministic)
}
func (m *FunctionInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionInformation.Merge(m, src)
}
func (m *FunctionInformation) XXX_Size() int {
	return xxx_messageInfo_FunctionInformation.Size(m)
}
func (m *FunctionInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionInformation.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionInformation proto.InternalMessageInfo

func (m *FunctionInformation) GetFunctionIdx() int32 {
	if m != nil {
		return m.FunctionIdx
	}
	return 0
}

func (m *FunctionInformation) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *FunctionInformation) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FunctionInformation) GetSourceBin() string {
	if m != nil {
		return m.SourceBin
	}
	return ""
}

func (m *FunctionInformation) GetConfig() []string {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *FunctionInformation) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *FunctionInformation) GetAggregate() bool {
	if m != nil {
		return m.Aggregate
	}
	return false
}

func (m *FunctionInformation) GetWindow() bool {
	if m != nil {
		return m.Window
	}
	return false
}

func (m *FunctionInformation) GetSecurityDefiner() bool {
	if m != nil {
		return m.SecurityDefiner
	}
	return false
}

func (m *FunctionInformation) GetLeakproof() bool {
	if m != nil {
		return m.Leakproof
	}
	return false
}

func (m *FunctionInformation) GetStrict() bool {
	if m != nil {
		return m.Strict
	}
	return false
}

func (m *FunctionInformation) GetReturnsSet() bool {
	if m != nil {
		return m.ReturnsSet
	}
	return false
}

func (m *FunctionInformation) GetVolatile() string {
	if m != nil {
		return m.Volatile
	}
	return ""
}

type FunctionStatistic struct {
	FunctionIdx          int32    `protobuf:"varint,1,opt,name=function_idx,json=functionIdx,proto3" json:"function_idx,omitempty"`
	Calls                int64    `protobuf:"varint,2,opt,name=calls,proto3" json:"calls,omitempty"`
	TotalTime            float64  `protobuf:"fixed64,3,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`
	SelfTime             float64  `protobuf:"fixed64,4,opt,name=self_time,json=selfTime,proto3" json:"self_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionStatistic) Reset()         { *m = FunctionStatistic{} }
func (m *FunctionStatistic) String() string { return proto.CompactTextString(m) }
func (*FunctionStatistic) ProtoMessage()    {}
func (*FunctionStatistic) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6b4141022f7abf6, []int{20}
}

func (m *FunctionStatistic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionStatistic.Unmarshal(m, b)
}
func (m *FunctionStatistic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionStatistic.Marshal(b, m, deterministic)
}
func (m *FunctionStatistic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionStatistic.Merge(m, src)
}
func (m *FunctionStatistic) XXX_Size() int {
	return xxx_messageInfo_FunctionStatistic.Size(m)
}
func (m *FunctionStatistic) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionStatistic.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionStatistic proto.InternalMessageInfo

func (m *FunctionStatistic) GetFunctionIdx() int32 {
	if m != nil {
		return m.FunctionIdx
	}
	return 0
}

func (m *FunctionStatistic) GetCalls() int64 {
	if m != nil {
		return m.Calls
	}
	return 0
}

func (m *FunctionStatistic) GetTotalTime() float64 {
	if m != nil {
		return m.TotalTime
	}
	return 0
}

func (m *FunctionStatistic) GetSelfTime() float64 {
	if m != nil {
		return m.SelfTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("pganalyze.collector.BackendCountStatistic_BackendState", BackendCountStatistic_BackendState_name, BackendCountStatistic_BackendState_value)
	proto.RegisterEnum("pganalyze.collector.BackendCountStatistic_BackendType", BackendCountStatistic_BackendType_name, BackendCountStatistic_BackendType_value)
	proto.RegisterEnum("pganalyze.collector.RelationEvent_EventType", RelationEvent_EventType_name, RelationEvent_EventType_value)
	proto.RegisterType((*FullSnapshot)(nil), "pganalyze.collector.FullSnapshot")
	proto.RegisterType((*CollectorStatistic)(nil), "pganalyze.collector.CollectorStatistic")
	proto.RegisterType((*RoleInformation)(nil), "pganalyze.collector.RoleInformation")
	proto.RegisterType((*DatabaseInformation)(nil), "pganalyze.collector.DatabaseInformation")
	proto.RegisterType((*Setting)(nil), "pganalyze.collector.Setting")
	proto.RegisterType((*Replication)(nil), "pganalyze.collector.Replication")
	proto.RegisterType((*StandbyReference)(nil), "pganalyze.collector.StandbyReference")
	proto.RegisterType((*StandbyInformation)(nil), "pganalyze.collector.StandbyInformation")
	proto.RegisterType((*StandbyStatistic)(nil), "pganalyze.collector.StandbyStatistic")
	proto.RegisterType((*BackendCountStatistic)(nil), "pganalyze.collector.BackendCountStatistic")
	proto.RegisterType((*TablespaceReference)(nil), "pganalyze.collector.TablespaceReference")
	proto.RegisterType((*TablespaceInformation)(nil), "pganalyze.collector.TablespaceInformation")
	proto.RegisterType((*QueryStatistic)(nil), "pganalyze.collector.QueryStatistic")
	proto.RegisterType((*HistoricQueryStatistics)(nil), "pganalyze.collector.HistoricQueryStatistics")
	proto.RegisterType((*RelationInformation)(nil), "pganalyze.collector.RelationInformation")
	proto.RegisterMapType((map[string]string)(nil), "pganalyze.collector.RelationInformation.OptionsEntry")
	proto.RegisterType((*RelationInformation_Column)(nil), "pganalyze.collector.RelationInformation.Column")
	proto.RegisterType((*RelationInformation_Constraint)(nil), "pganalyze.collector.RelationInformation.Constraint")
	proto.RegisterType((*RelationStatistic)(nil), "pganalyze.collector.RelationStatistic")
	proto.RegisterType((*RelationEvent)(nil), "pganalyze.collector.RelationEvent")
	proto.RegisterType((*IndexInformation)(nil), "pganalyze.collector.IndexInformation")
	proto.RegisterType((*IndexStatistic)(nil), "pganalyze.collector.IndexStatistic")
	proto.RegisterType((*FunctionInformation)(nil), "pganalyze.collector.FunctionInformation")
	proto.RegisterType((*FunctionStatistic)(nil), "pganalyze.collector.FunctionStatistic")
}

func init() { proto.RegisterFile("full_snapshot.proto", fileDescriptor_b6b4141022f7abf6) }

var fileDescriptor_b6b4141022f7abf6 = []byte{
	// 4132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x7a, 0x4b, 0x6f, 0x24, 0xc9,
	0x71, 0xbf, 0x9a, 0xcd, 0x47, 0x77, 0xf4, 0x93, 0xc9, 0xc7, 0xf4, 0x70, 0x76, 0xb5, 0xdc, 0xd6,
	0x68, 0x87, 0x92, 0x46, 0xdc, 0x3f, 0x66, 0xfe, 0x96, 0x16, 0x32, 0x64, 0xa9, 0x87, 0xec, 0xd1,
	0x70, 0x87, 0x43, 0x52, 0xc5, 0xe6, 0xcc, 0xae, 0x00, 0xbb, 0x50, 0x5d, 0x95, 0xdd, 0x4c, 0xb1,
	0xba, 0xaa, 0x26, 0x33, 0x8b, 0x43, 0x8e, 0x7d, 0x30, 0x6c, 0x18, 0x30, 0xe0, 0x83, 0x3f, 0x80,
	0x0f, 0xfe, 0x0a, 0x06, 0x6c, 0x08, 0x3e, 0x19, 0x3e, 0x19, 0x7e, 0xdc, 0x6c, 0xc8, 0x27, 0x59,
	0x6b, 0x5b, 0x06, 0x7c, 0xf3, 0xc5, 0x5f, 0xc0, 0x88, 0xcc, 0xac, 0x57, 0xb3, 0x87, 0xe4, 0x1a,
	0xbe, 0x10, 0x9d, 0x11, 0xbf, 0x88, 0x8c, 0xca, 0x88, 0x8c, 0x8c, 0x8c, 0x24, 0xac, 0x8c, 0x62,
	0xdf, 0xb7, 0x45, 0xe0, 0x44, 0xe2, 0x34, 0x94, 0xdb, 0x11, 0x0f, 0x65, 0x48, 0x56, 0xa2, 0xb1,
	0x13, 0x38, 0xfe, 0xe5, 0x5b, 0xba, 0xed, 0x86, 0xbe, 0x4f, 0x5d, 0x19, 0xf2, 0x8d, 0x0f, 0xc6,
	0x61, 0x38, 0xf6, 0xe9, 0xc7, 0x0a, 0x32, 0x8c, 0x47, 0x1f, 0x4b, 0x36, 0xa1, 0x42, 0x3a, 0x93,
	0x48, 0x4b, 0x6d, 0xd4, 0xc5, 0xa9, 0xc3, 0xa9, 0xa7, 0x47, 0xdd, 0xbf, 0x58, 0x83, 0xfa, 0xd3,
	0xd8, 0xf7, 0x8f, 0x8d, 0x6a, 0xf2, 0xff, 0x61, 0x3d, 0x99, 0xc6, 0x3e, 0xa7, 0x5c, 0xb0, 0x30,
	0xb0, 0x27, 0xce, 0x4f, 0x43, 0xde, 0x29, 0x6d, 0x96, 0xb6, 0x16, 0xac, 0xd5, 0x84, 0xfb, 0x52,
	0x33, 0x5f, 0x20, 0x6f, 0xb6, 0x14, 0x0b, 0x42, 0xde, 0x99, 0x9b, 0x2d, 0x85, 0x3c, 0xf2, 0x2d,
	0x58, 0x4e, 0x0d, 0x4f, 0xc4, 0x3a, 0xe5, 0xcd, 0xd2, 0x56, 0xd5, 0x6a, 0xa7, 0x0c, 0x23, 0x41,
	0xde, 0x07, 0x18, 0x39, 0xcc, 0xa7, 0x9e, 0xcd, 0xe3, 0xa0, 0x33, 0xbf, 0x59, 0xda, 0xaa, 0x58,
	0x55, 0x4d, 0xb1, 0xe2, 0x80, 0x7c, 0x0d, 0x1a, 0xa9, 0x05, 0x71, 0xcc, 0xbc, 0x0e, 0x28, 0x3d,
	0xf5, 0x84, 0x78, 0x12, 0x33, 0x8f, 0x7c, 0x1f, 0xea, 0x46, 0x2f, 0xf5, 0x6c, 0x47, 0x76, 0x6a,
	0x9b, 0xa5, 0xad, 0xda, 0xa3, 0x8d, 0x6d, 0xbd, 0x66, 0xdb, 0xc9, 0x9a, 0x6d, 0x0f, 0x92, 0x35,
	0xb3, 0x6a, 0x29, 0xbe, 0x27, 0xc9, 0x77, 0xe0, 0x4e, 0x26, 0xce, 0x02, 0x49, 0xf9, 0xb9, 0xe3,
	0xdb, 0x82, 0xba, 0xa2, 0x53, 0xdf, 0x2c, 0x6d, 0x35, 0xac, 0xb5, 0x94, 0xbd, 0x67, 0xb8, 0xc7,
	0xd4, 0x15, 0xe4, 0x33, 0x58, 0xc9, 0xbe, 0x53, 0x48, 0x47, 0x32, 0x21, 0x99, 0xdb, 0x59, 0x55,
	0xb3, 0x3f, 0xd8, 0x9e, 0xe1, 0xc6, 0xed, 0x9d, 0xe4, 0xd7, 0x71, 0x02, 0xb7, 0x88, 0x7b, 0x85,
	0x46, 0xbe, 0x01, 0xd9, 0x42, 0xd9, 0x94, 0xf3, 0x90, 0x8b, 0xce, 0xda, 0x66, 0x79, 0xab, 0x6a,
	0xb5, 0x52, 0x7a, 0x5f, 0x91, 0xc9, 0x63, 0x58, 0x14, 0x97, 0x42, 0xd2, 0x49, 0xc7, 0x53, 0xf3,
	0xde, 0x9b, 0x39, 0xef, 0xb1, 0x82, 0x58, 0x06, 0x4a, 0x0e, 0xa1, 0x1d, 0x85, 0x42, 0x8e, 0x39,
	0x15, 0xa9, 0x83, 0xa8, 0x12, 0xbf, 0x3f, 0x53, 0xfc, 0xc8, 0x80, 0x8d, 0xd3, 0xac, 0x56, 0x54,
	0x24, 0x90, 0xe7, 0xd0, 0xe2, 0xa1, 0x4f, 0x6d, 0x4e, 0x47, 0x94, 0xd3, 0xc0, 0xa5, 0xa2, 0x33,
	0xda, 0x2c, 0x6f, 0xd5, 0x1e, 0x75, 0x67, 0xea, 0xb3, 0x42, 0x9f, 0x5a, 0x09, 0xd4, 0x6a, 0xf2,
	0xfc, 0x50, 0x90, 0x57, 0xb0, 0xe2, 0x39, 0xd2, 0x19, 0x3a, 0xa2, 0xa0, 0x70, 0xac, 0x14, 0x7e,
	0x34, 0x53, 0xe1, 0xae, 0xc1, 0x67, 0x4a, 0x89, 0x37, 0x4d, 0x12, 0xe4, 0xc7, 0xb0, 0xac, 0xac,
	0x64, 0xc1, 0x28, 0xe4, 0x13, 0x47, 0xb2, 0x30, 0x10, 0x9d, 0x40, 0xa9, 0xbd, 0xff, 0x4e, 0x3b,
	0xf7, 0x32, 0xb0, 0xd5, 0xe6, 0x45, 0x82, 0x20, 0xbf, 0x09, 0x6b, 0xa9, 0xad, 0x05, 0xb5, 0xa1,
	0x52, 0xbb, 0x75, 0xad, 0xb5, 0x79, 0xd5, 0xab, 0xde, 0x55, 0xa2, 0x20, 0x9f, 0x40, 0x45, 0x50,
	0x29, 0x59, 0x30, 0x16, 0x9d, 0xb7, 0x4a, 0xe3, 0x7b, 0xb3, 0xfd, 0xab, 0x41, 0x56, 0x8a, 0x26,
	0x4f, 0xa0, 0xc6, 0x69, 0xe4, 0x33, 0x57, 0x69, 0xea, 0xfc, 0xb6, 0xf2, 0xee, 0xe6, 0xec, 0xaf,
	0xcc, 0x70, 0x56, 0x5e, 0x88, 0x78, 0xd0, 0x19, 0x3a, 0xee, 0x19, 0x0d, 0x3c, 0xdb, 0x0d, 0xe3,
	0x40, 0x66, 0x41, 0x2e, 0x3a, 0xbf, 0xa3, 0xac, 0xf9, 0xe6, 0x4c, 0x85, 0x4f, 0xb4, 0xd0, 0x0e,
	0xca, 0x64, 0x81, 0xbe, 0x3e, 0x9c, 0x45, 0x16, 0xe4, 0xb7, 0x60, 0x4d, 0x3a, 0x43, 0x9f, 0x8a,
	0xc8, 0x71, 0x0b, 0x0e, 0xff, 0xbd, 0xd2, 0x35, 0x6b, 0x38, 0x48, 0x45, 0x32, 0x9f, 0xaf, 0xca,
	0xab, 0x44, 0x41, 0x3c, 0xb8, 0x93, 0xd3, 0x5f, 0x70, 0xd2, 0xef, 0x97, 0xae, 0xf9, 0x8a, 0x6c,
	0x86, 0xbc, 0x9f, 0xd6, 0xe5, 0x2c, 0xb2, 0xc0, 0x2d, 0xf5, 0x3a, 0xa6, 0xfc, 0x32, 0xff, 0x01,
	0x7f, 0xab, 0xd5, 0x7f, 0x6d, 0xa6, 0xfa, 0x1f, 0x23, 0x3a, 0xb3, 0xbd, 0xf5, 0xba, 0x30, 0x56,
	0xd9, 0x85, 0x53, 0x5f, 0x69, 0xcf, 0xeb, 0xfc, 0xbb, 0xd2, 0x35, 0xdb, 0xc0, 0x32, 0x02, 0xb9,
	0x6d, 0xc0, 0xa7, 0x49, 0xca, 0x54, 0x16, 0x78, 0xf4, 0x22, 0xaf, 0xf6, 0xef, 0xaf, 0x33, 0x75,
	0x0f, 0xd1, 0x39, 0x53, 0x59, 0x61, 0xac, 0x4c, 0x1d, 0xc5, 0x81, 0x3b, 0x6d, 0xea, 0x3f, 0x5c,
	0x67, 0xea, 0x53, 0x23, 0x90, 0x33, 0x75, 0x34, 0x4d, 0x12, 0xe4, 0x04, 0x88, 0x5e, 0xd5, 0x82,
	0xdb, 0xfe, 0x51, 0x2b, 0xfe, 0xfa, 0xbb, 0xd7, 0x35, 0xef, 0xb1, 0xe5, 0xd7, 0x53, 0x94, 0x9c,
	0xb3, 0x72, 0x01, 0xfd, 0x4f, 0x37, 0x3a, 0x2b, 0x0b, 0x65, 0xed, 0xac, 0x5c, 0x0c, 0x33, 0xb8,
	0x7b, 0xca, 0x84, 0x0c, 0x39, 0x73, 0xed, 0x2b, 0x9a, 0x7f, 0xae, 0x35, 0x3f, 0x9c, 0xa9, 0xf9,
	0x99, 0x11, 0x2b, 0xce, 0x20, 0xac, 0x3b, 0xa7, 0xb3, 0x19, 0x64, 0x00, 0x4d, 0x3d, 0x03, 0xbd,
	0x88, 0x7c, 0x87, 0x05, 0xa2, 0xf3, 0xcf, 0xd7, 0xe9, 0x57, 0xe2, 0x7d, 0x0d, 0xcd, 0xaf, 0x4a,
	0xe3, 0x75, 0x8e, 0xa1, 0x36, 0x61, 0x1a, 0x6d, 0x85, 0xb5, 0xfe, 0xc5, 0x75, 0x9b, 0x30, 0x89,
	0xb7, 0x42, 0x22, 0xe3, 0x57, 0x89, 0xc5, 0x68, 0xce, 0x2d, 0xcd, 0xbf, 0xdc, 0x26, 0x9a, 0x73,
	0x67, 0x25, 0x9f, 0x26, 0x09, 0xb2, 0x0f, 0xad, 0x54, 0x33, 0x3d, 0xa7, 0x81, 0x14, 0x9d, 0x2f,
	0x4a, 0xd7, 0x9d, 0x3d, 0x06, 0xdc, 0x47, 0xac, 0xd5, 0xe4, 0xf9, 0xa1, 0x0a, 0x38, 0xbd, 0x37,
	0x0a, 0x8b, 0xf0, 0xaf, 0xd7, 0x05, 0x9c, 0xda, 0x1d, 0x85, 0x80, 0x63, 0x53, 0x94, 0xdc, 0x96,
	0xcb, 0x7d, 0xfb, 0xbf, 0xdd, 0xb8, 0xe5, 0x72, 0x01, 0xc7, 0x0a, 0x63, 0xe5, 0xaf, 0x74, 0xcb,
	0x15, 0x4c, 0xfd, 0xd5, 0x75, 0xfe, 0x4a, 0x36, 0x5d, 0xc1, 0x5f, 0xa3, 0xab, 0xc4, 0xe2, 0x96,
	0xce, 0xd9, 0xfc, 0x1f, 0xb7, 0xd9, 0xd2, 0x39, 0x7f, 0x8d, 0xa6, 0x49, 0xe2, 0xd3, 0xf9, 0xca,
	0x45, 0xfb, 0xf2, 0xd3, 0xf9, 0xca, 0x65, 0xfb, 0xed, 0xa7, 0x8b, 0x95, 0x5f, 0x96, 0xda, 0x5f,
	0x94, 0x3e, 0x5d, 0xac, 0xfc, 0x7b, 0xa9, 0xfd, 0xab, 0x52, 0xf7, 0x6f, 0xe6, 0x80, 0x5c, 0x2d,
	0x91, 0xb0, 0x46, 0x1c, 0x87, 0x69, 0xa1, 0xa2, 0x2b, 0xc0, 0xea, 0x38, 0x4c, 0x8a, 0x8f, 0xef,
	0xc3, 0xbd, 0x09, 0x9d, 0x84, 0xfc, 0xd2, 0x3e, 0xa5, 0x4e, 0x64, 0x3b, 0xbe, 0x1f, 0xba, 0x0e,
	0xd6, 0x72, 0xc3, 0x4b, 0x49, 0x45, 0xa7, 0xb1, 0x59, 0xda, 0x9a, 0xb7, 0x3a, 0x1a, 0xf2, 0x8c,
	0x3a, 0x51, 0x2f, 0x01, 0x3c, 0x41, 0x3e, 0xd9, 0x86, 0x95, 0xbc, 0x78, 0x38, 0xfc, 0x29, 0x75,
	0xa5, 0xe8, 0x34, 0x95, 0xd8, 0x72, 0x26, 0x76, 0xa8, 0x19, 0x39, 0xbc, 0xae, 0xa6, 0xcc, 0x34,
	0xad, 0x3c, 0x5e, 0xd7, 0x5b, 0x5a, 0xff, 0x16, 0xb4, 0x0d, 0x9e, 0x0b, 0x61, 0xc0, 0x6d, 0x05,
	0x6e, 0x6a, 0xba, 0x25, 0x84, 0x46, 0x7e, 0x0b, 0x96, 0x1d, 0x57, 0xb2, 0x73, 0x6a, 0x8f, 0x43,
	0x1e, 0xc6, 0x92, 0x05, 0x54, 0xa8, 0x72, 0x72, 0xc1, 0x6a, 0x6b, 0xc6, 0x8f, 0x52, 0x3a, 0xb9,
	0x07, 0x55, 0x77, 0x1c, 0xda, 0xae, 0xe3, 0xfb, 0xa2, 0xf3, 0xd5, 0xcd, 0xd2, 0x56, 0xd9, 0xaa,
	0xb8, 0xe3, 0x70, 0x07, 0xc7, 0xdd, 0x3f, 0x2b, 0x43, 0x6b, 0xaa, 0x78, 0x21, 0x77, 0xa1, 0xa2,
	0xab, 0x1f, 0xef, 0xc2, 0x14, 0xfd, 0x4b, 0xaa, 0x9c, 0xf1, 0x2e, 0x48, 0x07, 0x96, 0x58, 0x70,
	0x4a, 0x39, 0x93, 0xaa, 0xb0, 0xaf, 0x58, 0xc9, 0x90, 0xac, 0xc2, 0x82, 0x1f, 0x8e, 0x99, 0xae,
	0xdf, 0x2b, 0x96, 0x1e, 0xa8, 0xb9, 0x39, 0x75, 0x24, 0xb5, 0xbd, 0xa1, 0xa9, 0xd9, 0x2b, 0x9a,
	0xb0, 0x3b, 0x24, 0x1f, 0x40, 0xcd, 0x30, 0x51, 0x7d, 0x67, 0x41, 0xb1, 0x41, 0x93, 0xd0, 0x26,
	0x74, 0xa7, 0x88, 0x23, 0xca, 0xed, 0x58, 0x50, 0xde, 0x59, 0xd4, 0x25, 0xbf, 0xa2, 0x9c, 0x08,
	0xca, 0xc9, 0x66, 0xb1, 0x72, 0x59, 0x52, 0xfc, 0x42, 0x5d, 0xf2, 0x3e, 0xc0, 0xf0, 0x32, 0x72,
	0x84, 0xb0, 0xb9, 0x2f, 0x3a, 0x15, 0xad, 0x40, 0x53, 0x2c, 0x5f, 0xe8, 0xea, 0x39, 0x08, 0xa8,
	0x8e, 0x5e, 0x9f, 0x4d, 0x98, 0xec, 0x54, 0xd5, 0x07, 0xb7, 0x32, 0xfa, 0x3e, 0x92, 0xc9, 0x00,
	0x56, 0x51, 0xea, 0x4d, 0xc8, 0x3d, 0xfb, 0xdc, 0xf1, 0x99, 0x67, 0xc7, 0x81, 0x64, 0xbe, 0x8a,
	0xb1, 0x77, 0x25, 0x90, 0x83, 0xd8, 0xf7, 0xb3, 0x9b, 0x04, 0x49, 0xe4, 0x5f, 0xa2, 0xf8, 0x09,
	0x4a, 0x93, 0x75, 0x58, 0x74, 0xc3, 0x60, 0xc4, 0xc6, 0x9d, 0x9a, 0x2a, 0xda, 0xcd, 0x08, 0x97,
	0x6d, 0x42, 0x27, 0x43, 0xca, 0xed, 0x70, 0xd4, 0xa9, 0x6f, 0x96, 0xb7, 0x16, 0xac, 0x8a, 0x26,
	0x1c, 0x8e, 0xba, 0x7f, 0x59, 0x86, 0x95, 0x19, 0x85, 0x21, 0xf9, 0x10, 0xea, 0x59, 0x85, 0x99,
	0xba, 0xae, 0x96, 0x96, 0x8b, 0xde, 0x05, 0xb9, 0x0f, 0xcd, 0xf0, 0x4d, 0x40, 0xb9, 0x9d, 0xfa,
	0x57, 0x5f, 0xcf, 0xea, 0x8a, 0x6a, 0x19, 0x27, 0x6f, 0x40, 0x85, 0x06, 0x6e, 0xe8, 0xb1, 0x60,
	0x6c, 0x6e, 0x63, 0xe9, 0x18, 0x03, 0x00, 0x3f, 0xd0, 0x91, 0x54, 0xb9, 0xb3, 0x6a, 0x25, 0x43,
	0xb2, 0x06, 0x8b, 0xae, 0x2d, 0x2f, 0x23, 0xed, 0xc8, 0xaa, 0xb5, 0xe0, 0x0e, 0x2e, 0x23, 0x8a,
	0x4e, 0x66, 0xc2, 0x96, 0x74, 0x12, 0x29, 0x21, 0xed, 0x44, 0x60, 0x62, 0x60, 0x28, 0x2a, 0x96,
	0x7d, 0x3f, 0x7c, 0x63, 0x67, 0x4b, 0x2e, 0x8c, 0x2f, 0xdb, 0x8a, 0xb1, 0x93, 0xd1, 0x67, 0x7a,
	0xac, 0x32, 0xdb, 0x63, 0x78, 0x5f, 0xe4, 0xe1, 0x5b, 0x1a, 0xd8, 0x17, 0xcc, 0x53, 0x6e, 0x6d,
	0x58, 0x55, 0x4d, 0xf9, 0x8c, 0x79, 0xe4, 0x11, 0xac, 0x4d, 0x58, 0xc0, 0x26, 0xf1, 0xc4, 0x9e,
	0xc4, 0xbe, 0x64, 0x17, 0x8e, 0x2b, 0x15, 0x12, 0x14, 0x72, 0xc5, 0x30, 0x5f, 0x24, 0x3c, 0x94,
	0xf9, 0x01, 0xbc, 0x97, 0xdd, 0xff, 0x30, 0x35, 0xf8, 0xb6, 0xeb, 0x48, 0xc7, 0x0f, 0xc7, 0x36,
	0xae, 0xb2, 0xba, 0x4e, 0x56, 0xac, 0xbb, 0x29, 0x66, 0x1f, 0x21, 0x3b, 0x1a, 0x81, 0x1e, 0xeb,
	0xfe, 0xac, 0x0c, 0x4b, 0xa6, 0x02, 0x27, 0x04, 0xe6, 0x03, 0x67, 0x42, 0x95, 0x9b, 0xaa, 0x96,
	0xfa, 0x8d, 0x97, 0x58, 0x37, 0xe6, 0x9c, 0x06, 0x12, 0x83, 0x2c, 0xa6, 0xca, 0x3d, 0x55, 0xab,
	0x6e, 0x88, 0x2f, 0x91, 0x46, 0x1e, 0xc3, 0x7c, 0x1c, 0x30, 0xa9, 0x5c, 0x53, 0x7b, 0xf4, 0xc1,
	0x3b, 0x43, 0xef, 0x58, 0x72, 0xac, 0xf4, 0x15, 0x98, 0xfc, 0x06, 0xc0, 0x30, 0x0c, 0x13, 0xb5,
	0xf3, 0xb7, 0x13, 0xad, 0xa2, 0x88, 0x9e, 0xf4, 0x87, 0xb8, 0xd7, 0x04, 0x4d, 0x14, 0x2c, 0xdc,
	0x4e, 0x01, 0x28, 0x19, 0xad, 0xe1, 0xbb, 0xb0, 0x28, 0xc2, 0x98, 0xbb, 0x3a, 0x06, 0x6e, 0x21,
	0x6c, 0xe0, 0x38, 0xb5, 0xfe, 0x65, 0x8f, 0x98, 0x4f, 0x55, 0x68, 0xdc, 0x66, 0x6a, 0x2d, 0xf3,
	0x94, 0xf9, 0x79, 0x0d, 0x3e, 0x0b, 0xa8, 0x0a, 0x98, 0xdb, 0x6b, 0xd8, 0x67, 0x01, 0xed, 0xfe,
	0xee, 0x02, 0xd4, 0x72, 0xb7, 0x1f, 0x15, 0xd5, 0x58, 0xc2, 0xba, 0xe1, 0x39, 0xe5, 0x97, 0xca,
	0x87, 0x18, 0xd5, 0x81, 0x65, 0x28, 0x18, 0x5e, 0x89, 0x27, 0x2f, 0x30, 0x3e, 0xd4, 0x41, 0x92,
	0x1d, 0x4a, 0x2b, 0x86, 0xf9, 0x99, 0x1f, 0x8e, 0xf7, 0x0d, 0x8b, 0x0c, 0x80, 0x08, 0xe9, 0x04,
	0xde, 0xb0, 0x70, 0x37, 0xa8, 0x5d, 0x53, 0x51, 0x1c, 0x6b, 0x78, 0x56, 0x1a, 0x2f, 0x8b, 0x29,
	0x8a, 0x20, 0x3f, 0x81, 0xd5, 0x44, 0x6b, 0xe1, 0xfc, 0xaf, 0x2b, 0xbd, 0x0f, 0xae, 0xd3, 0x9b,
	0x3f, 0xfd, 0x57, 0xc4, 0x15, 0x9a, 0xc8, 0x5b, 0x9c, 0x3b, 0xfb, 0x1b, 0x37, 0x5b, 0x9c, 0x9d,
	0xfc, 0x89, 0xc5, 0xb9, 0x92, 0xe5, 0x43, 0xa8, 0x33, 0x61, 0x0b, 0xc9, 0xa9, 0x33, 0xc1, 0x1c,
	0xb4, 0xaa, 0x13, 0x3b, 0x13, 0xc7, 0x09, 0x09, 0xf3, 0x00, 0xa7, 0x2e, 0xc5, 0x13, 0x30, 0x5d,
	0xd9, 0x35, 0xb5, 0xb2, 0x2d, 0x43, 0x4f, 0x57, 0xf5, 0x01, 0x96, 0x7d, 0x91, 0xef, 0x5c, 0x66,
	0xc8, 0x75, 0x85, 0x6c, 0x6a, 0x72, 0x0a, 0xbc, 0x0f, 0x4d, 0x27, 0x8a, 0xfc, 0x4b, 0x75, 0xf2,
	0xda, 0xbe, 0x33, 0xee, 0xdc, 0x51, 0x87, 0x65, 0x5d, 0x51, 0xf1, 0xe0, 0xdd, 0x77, 0xc6, 0xa4,
	0x8f, 0x33, 0x2b, 0x75, 0x69, 0x63, 0xad, 0xd3, 0xb9, 0xb1, 0x8d, 0x64, 0x4c, 0x48, 0x09, 0xe4,
	0xff, 0xc1, 0xea, 0xb4, 0x1a, 0xdb, 0x19, 0xd3, 0xce, 0x5d, 0x35, 0x25, 0x99, 0x82, 0xf7, 0xc6,
	0xb4, 0xfb, 0x18, 0xda, 0xd3, 0xee, 0x56, 0x27, 0xa8, 0xcf, 0x30, 0xc8, 0x1c, 0xcf, 0xe3, 0x26,
	0x95, 0x80, 0x26, 0xf5, 0x3c, 0x8f, 0x77, 0x7f, 0x31, 0x07, 0xe4, 0xaa, 0x33, 0x51, 0x2e, 0x8d,
	0x89, 0xf4, 0xa4, 0x80, 0xc4, 0xc3, 0xde, 0x45, 0xa1, 0x04, 0x98, 0x2b, 0x96, 0x00, 0x6d, 0x28,
	0x47, 0xcc, 0x53, 0xd9, 0xa7, 0x6c, 0xe1, 0x4f, 0x74, 0x06, 0x2e, 0x91, 0xd9, 0x1b, 0xb6, 0xca,
	0x6a, 0xfa, 0x70, 0x68, 0xe5, 0xe8, 0x07, 0x98, 0xe0, 0x1e, 0x40, 0xcb, 0x18, 0x7c, 0x1a, 0x0a,
	0xa9, 0x90, 0xfa, 0xb4, 0x68, 0x6a, 0xf2, 0x33, 0x43, 0xcd, 0x7d, 0x59, 0x14, 0x72, 0xa9, 0x52,
	0xc6, 0x42, 0xf2, 0x65, 0x47, 0x21, 0x97, 0xe4, 0x07, 0xd0, 0x48, 0x5a, 0x0e, 0x42, 0x3a, 0x5c,
	0x9a, 0xbc, 0x70, 0x9d, 0x13, 0xea, 0x46, 0xe0, 0x18, 0xf1, 0xaa, 0x61, 0x78, 0x19, 0xb8, 0x76,
	0xc4, 0x59, 0xc8, 0x99, 0xbc, 0x34, 0xe7, 0x48, 0x1d, 0x89, 0x47, 0x86, 0xa6, 0x2a, 0x10, 0x04,
	0x61, 0x74, 0x53, 0x75, 0x88, 0x54, 0xad, 0x2a, 0x52, 0x30, 0x5c, 0x69, 0xf7, 0xcf, 0xe7, 0x52,
	0xa7, 0x64, 0x45, 0xe8, 0x8d, 0x8b, 0xbb, 0x0a, 0x0b, 0x5a, 0x9f, 0xce, 0xee, 0x7a, 0xa0, 0xec,
	0xc1, 0xef, 0x4d, 0xa3, 0xb4, 0x6c, 0x1a, 0x98, 0x34, 0x90, 0x69, 0x8c, 0x7e, 0x1d, 0x9a, 0x6f,
	0x38, 0x93, 0xb9, 0xa8, 0xd7, 0x0b, 0xdd, 0x50, 0xd4, 0x3c, 0x6c, 0xe4, 0xc7, 0xe2, 0x34, 0x83,
	0xe9, 0x55, 0x6e, 0x28, 0xea, 0x75, 0x5b, 0x63, 0x71, 0xe6, 0xd6, 0xf8, 0x08, 0x81, 0x93, 0x50,
	0xd2, 0x6c, 0x6f, 0x2c, 0x29, 0xff, 0x37, 0x34, 0x39, 0xd9, 0x1c, 0xf7, 0xa1, 0xa9, 0x8f, 0xc5,
	0x14, 0x56, 0xd1, 0x5b, 0x48, 0x51, 0x0d, 0xaa, 0xfb, 0x47, 0x8b, 0xb0, 0x36, 0xb3, 0xf3, 0x43,
	0x36, 0xa1, 0x7e, 0xea, 0x08, 0xbb, 0x50, 0x7d, 0x56, 0x2c, 0x38, 0x75, 0x44, 0x52, 0x9b, 0x5c,
	0x13, 0x98, 0x5b, 0xd0, 0x46, 0xe1, 0x42, 0x0d, 0xa4, 0x8b, 0xd1, 0xe6, 0xa9, 0x23, 0x76, 0x73,
	0x65, 0xd0, 0x74, 0xa5, 0x34, 0x7f, 0xb5, 0x52, 0x7a, 0x91, 0xf8, 0x08, 0x17, 0xae, 0xf9, 0xe8,
	0xbb, 0xb7, 0x6f, 0x5f, 0x25, 0x54, 0x15, 0x21, 0x89, 0x73, 0x3f, 0x87, 0x24, 0xf8, 0x74, 0x89,
	0xb4, 0xa8, 0xb4, 0x7e, 0xe7, 0xcb, 0x6b, 0xc5, 0x9a, 0xca, 0xaa, 0x0d, 0xb3, 0x01, 0x7e, 0xf6,
	0x1b, 0x87, 0x61, 0x49, 0x61, 0x8f, 0x42, 0x8e, 0x9e, 0x3c, 0x33, 0xe5, 0x53, 0xd3, 0xd0, 0x9f,
	0x86, 0x7c, 0x3f, 0x74, 0xcf, 0x30, 0xee, 0x54, 0x77, 0xce, 0x44, 0xba, 0x1e, 0x74, 0xff, 0xa4,
	0x04, 0xf5, 0xbc, 0xc9, 0x64, 0x19, 0x1a, 0x27, 0x07, 0xcf, 0x0f, 0x0e, 0x5f, 0x1d, 0xd8, 0xc7,
	0x83, 0xde, 0xa0, 0xdf, 0xfe, 0x0a, 0x01, 0x58, 0xec, 0xed, 0x0c, 0xf6, 0x5e, 0xf6, 0xdb, 0x25,
	0x52, 0x81, 0xf9, 0xbd, 0xdd, 0xfd, 0x7e, 0x7b, 0x8e, 0xdc, 0x81, 0x15, 0xfc, 0x65, 0xef, 0x1d,
	0xd8, 0x03, 0xab, 0x77, 0x70, 0x8c, 0x90, 0xc3, 0x83, 0x76, 0x99, 0x7c, 0x00, 0xf7, 0x66, 0x30,
	0xec, 0xde, 0x93, 0x43, 0x6b, 0xd0, 0xdf, 0x6d, 0xcf, 0x93, 0x0d, 0x58, 0x7f, 0xda, 0x3b, 0x1e,
	0x1c, 0xf5, 0x06, 0xcf, 0xec, 0xa7, 0x27, 0x07, 0x9a, 0xbd, 0xd3, 0xdb, 0xdf, 0x6f, 0x2f, 0x90,
	0x3a, 0x54, 0x76, 0xf7, 0x8e, 0x7b, 0x4f, 0xf6, 0xfb, 0xbb, 0xed, 0xc5, 0xee, 0x17, 0x25, 0xa8,
	0xe5, 0x3e, 0x9d, 0xb4, 0xa1, 0x9e, 0x18, 0x37, 0xf8, 0xfc, 0x08, 0x6d, 0xbb, 0x03, 0x2b, 0xbd,
	0x93, 0xc1, 0xe1, 0xcb, 0xde, 0xce, 0xc9, 0xc9, 0x0b, 0x7b, 0xbf, 0x77, 0x72, 0xb0, 0xf3, 0xac,
	0x6f, 0xb5, 0x4b, 0x64, 0x0d, 0x96, 0x73, 0x8c, 0x57, 0x87, 0xd6, 0xf3, 0xbe, 0xd5, 0x9e, 0x43,
	0xf2, 0x93, 0xde, 0xce, 0xf3, 0x1f, 0x59, 0x87, 0x27, 0x07, 0xbb, 0x09, 0xb9, 0x3c, 0x4d, 0xb6,
	0xf6, 0x06, 0x7d, 0xab, 0x3d, 0x4f, 0x08, 0x34, 0x77, 0xf6, 0xf7, 0xfa, 0x07, 0x03, 0x1b, 0xb9,
	0xfd, 0x83, 0xdd, 0xf6, 0x02, 0xda, 0xb0, 0xf3, 0xac, 0xbf, 0xf3, 0xfc, 0xe8, 0x70, 0xef, 0x00,
	0x51, 0x8b, 0xa4, 0x06, 0x4b, 0xc7, 0x83, 0x9e, 0x35, 0x38, 0x39, 0x6a, 0x2f, 0x91, 0x16, 0xd4,
	0x5e, 0xf5, 0xf6, 0xad, 0xfe, 0x4e, 0x7f, 0xef, 0x65, 0xdf, 0x6a, 0x57, 0x48, 0x03, 0xaa, 0xaf,
	0x7a, 0xfb, 0xc7, 0xfd, 0x83, 0xdd, 0xbe, 0xd5, 0xae, 0x9a, 0xa1, 0x99, 0x01, 0xba, 0xdf, 0x80,
	0x95, 0x19, 0x2d, 0xca, 0x59, 0xe5, 0x61, 0xf7, 0x4f, 0x4b, 0xb0, 0x36, 0xb3, 0xd9, 0x88, 0x1b,
	0x3e, 0xdf, 0xba, 0x4c, 0xd3, 0x4e, 0x23, 0xd7, 0x84, 0xf4, 0x2e, 0xc8, 0x43, 0x20, 0x1e, 0x13,
	0x67, 0x76, 0xe4, 0x70, 0xc9, 0x74, 0x4b, 0x20, 0xdd, 0x47, 0x6d, 0xe4, 0x1c, 0x25, 0x8c, 0xe9,
	0xbd, 0x56, 0x2e, 0xee, 0xb5, 0xec, 0xe2, 0x32, 0x9f, 0xbf, 0xb8, 0x74, 0xff, 0x6b, 0x1e, 0x9a,
	0xc5, 0x3e, 0x14, 0xde, 0x65, 0x4c, 0x67, 0x2e, 0xb5, 0xaa, 0xa2, 0x1b, 0x6d, 0x3a, 0x15, 0xea,
	0x7b, 0xe9, 0x9c, 0xca, 0x13, 0x7a, 0x80, 0x59, 0x57, 0x86, 0xd2, 0xf1, 0xd5, 0xd9, 0xa8, 0xa6,
	0x2e, 0x59, 0x55, 0x45, 0xc1, 0x64, 0x8e, 0x4b, 0xc3, 0xc3, 0x37, 0x42, 0x6d, 0xdb, 0xb2, 0xa5,
	0x7e, 0x63, 0x86, 0xd2, 0xef, 0x5a, 0xf6, 0xd0, 0x3f, 0x13, 0xf6, 0x29, 0x93, 0x6a, 0xe7, 0x96,
	0xad, 0x86, 0x26, 0x3f, 0xf1, 0xcf, 0xc4, 0x33, 0x26, 0x71, 0xb7, 0xe4, 0x71, 0x9c, 0x3a, 0x9e,
	0xda, 0x8c, 0x65, 0xab, 0x99, 0x01, 0x2d, 0xea, 0x78, 0x78, 0x7b, 0xcf, 0x23, 0x3d, 0xc6, 0x25,
	0xa3, 0x9e, 0xc9, 0x7b, 0xcb, 0x19, 0x78, 0x57, 0x33, 0xa6, 0xf1, 0x98, 0x90, 0x25, 0x0d, 0x4c,
	0x02, 0xcc, 0xe1, 0x5f, 0x69, 0x46, 0x2e, 0x57, 0x26, 0x06, 0x57, 0xf3, 0xb9, 0xd2, 0xd8, 0xfb,
	0x11, 0xb4, 0x72, 0x28, 0x65, 0x2e, 0xe8, 0xef, 0x4a, 0x61, 0xca, 0xda, 0x87, 0x40, 0x72, 0xb8,
	0xc4, 0xd8, 0x9a, 0x82, 0xb6, 0x53, 0x68, 0x62, 0x6b, 0x11, 0x9d, 0x98, 0x5a, 0x9f, 0x42, 0xe7,
	0x2c, 0xc5, 0xfb, 0x5b, 0xce, 0x84, 0x86, 0xb6, 0x14, 0xa9, 0xa9, 0x05, 0xdf, 0x84, 0xe5, 0x0c,
	0x95, 0xa8, 0x6c, 0x2a, 0x60, 0x2b, 0x01, 0x26, 0x1a, 0xbb, 0xd0, 0x18, 0xfa, 0x67, 0x4a, 0x97,
	0xf6, 0x71, 0x4b, 0xf9, 0xb8, 0x36, 0xf4, 0xcf, 0x50, 0x97, 0xf2, 0xf2, 0x7d, 0x68, 0x22, 0x46,
	0x1f, 0x77, 0x0a, 0xd4, 0x56, 0xa0, 0xfa, 0xd0, 0x3f, 0x43, 0x3d, 0x14, 0x51, 0xdd, 0x9f, 0x97,
	0xe0, 0xce, 0x3b, 0x3a, 0xa3, 0x57, 0x5e, 0xfb, 0x4a, 0xff, 0x67, 0xaf, 0x7d, 0x73, 0xd7, 0xbd,
	0xf6, 0xed, 0x00, 0xe4, 0x8a, 0xe1, 0xf2, 0xed, 0x9b, 0xc5, 0x39, 0xb1, 0xee, 0x5f, 0xd5, 0x60,
	0x65, 0x46, 0xd3, 0x14, 0x8f, 0xae, 0xac, 0xfd, 0x9a, 0x5d, 0xf2, 0xd3, 0x56, 0xaa, 0x77, 0x81,
	0x85, 0x44, 0x0a, 0x51, 0x87, 0x8d, 0xb9, 0x44, 0x26, 0x44, 0x95, 0x47, 0x9f, 0x41, 0xeb, 0x9c,
	0xd1, 0x37, 0xb6, 0x47, 0x47, 0x2c, 0x60, 0x69, 0xbd, 0x71, 0x8b, 0x6b, 0x51, 0x13, 0xe5, 0x76,
	0x53, 0x31, 0xb2, 0xa7, 0x3a, 0x02, 0xf1, 0x24, 0x10, 0x2a, 0x17, 0xd4, 0x1e, 0x7d, 0x7c, 0xdb,
	0x0e, 0xf0, 0xf6, 0x8e, 0x92, 0xb3, 0x12, 0x79, 0x72, 0x02, 0x35, 0x37, 0x0c, 0x84, 0xe4, 0x0e,
	0x0b, 0xa4, 0xe8, 0x2c, 0x28, 0x75, 0x8f, 0xbf, 0x84, 0xba, 0x44, 0xd6, 0xca, 0xeb, 0xc1, 0xfa,
	0x34, 0xa2, 0x5c, 0x30, 0x21, 0x31, 0xb3, 0x66, 0x07, 0x70, 0xd5, 0x6a, 0xe5, 0xe8, 0x6a, 0x59,
	0xbe, 0x0a, 0x30, 0x62, 0xbe, 0x3f, 0x72, 0x70, 0x12, 0xb5, 0xd7, 0x17, 0xac, 0x1c, 0x05, 0x53,
	0x22, 0xd6, 0x18, 0x21, 0xf3, 0x92, 0x76, 0xd2, 0xd2, 0xa9, 0x23, 0x0e, 0x99, 0x27, 0xc8, 0x27,
	0xd0, 0x41, 0x96, 0xe9, 0x87, 0x39, 0x38, 0x93, 0x7b, 0xca, 0x7c, 0x8f, 0xd3, 0x40, 0xed, 0xec,
	0x8a, 0xb5, 0x7e, 0xea, 0x88, 0xbd, 0x8c, 0xbd, 0x63, 0xb8, 0x98, 0x21, 0x51, 0x52, 0x86, 0x8e,
	0x90, 0x6a, 0x77, 0x57, 0x2c, 0x9c, 0x65, 0x80, 0xe3, 0xa9, 0x36, 0x46, 0xed, 0xd6, 0x6d, 0x8c,
	0xfa, 0xbb, 0xdb, 0x18, 0xdf, 0x06, 0x42, 0x2f, 0x5c, 0x3f, 0x16, 0xec, 0x9c, 0xfa, 0xaa, 0xf6,
	0x3b, 0xa3, 0x7a, 0x4f, 0x57, 0xac, 0xe5, 0x1c, 0x67, 0x5f, 0x31, 0xc8, 0x21, 0x2c, 0x85, 0x91,
	0xbe, 0x33, 0x36, 0x95, 0x47, 0x7e, 0xed, 0xd6, 0x1e, 0x39, 0xd4, 0x72, 0xfd, 0x40, 0xf2, 0x4b,
	0x2b, 0xd1, 0x82, 0x99, 0x32, 0x72, 0xd4, 0xd5, 0xb8, 0x10, 0xca, 0x2d, 0xb5, 0xda, 0xcb, 0x9a,
	0x65, 0xe5, 0x02, 0x7a, 0x1b, 0x56, 0x70, 0x7d, 0xa6, 0x64, 0x54, 0x3a, 0xa8, 0x58, 0xcb, 0xa7,
	0x8e, 0x38, 0x2a, 0x88, 0xe0, 0xf7, 0x65, 0x07, 0xdc, 0x30, 0x8c, 0x03, 0xcf, 0xe1, 0x97, 0x9d,
	0x65, 0xe5, 0xf1, 0xe5, 0x94, 0xf3, 0xc4, 0x30, 0x36, 0xbe, 0x07, 0xf5, 0xbc, 0x9d, 0x78, 0xc1,
	0x39, 0xa3, 0x97, 0xe6, 0xe0, 0xc5, 0x9f, 0x78, 0x4a, 0xe5, 0xdb, 0x31, 0x7a, 0xf0, 0xbd, 0xb9,
	0x4f, 0x4a, 0x1b, 0x3f, 0x2b, 0xc1, 0xa2, 0x8e, 0xe2, 0xf4, 0xc0, 0x9e, 0xcb, 0xf5, 0x73, 0xee,
	0x41, 0x15, 0x8b, 0x4a, 0x1d, 0x72, 0xa6, 0x95, 0x86, 0x04, 0x15, 0x6b, 0xbb, 0xd0, 0xf0, 0xe8,
	0xc8, 0x89, 0xfd, 0x2f, 0xd9, 0x95, 0xa9, 0x1b, 0x29, 0xdd, 0x56, 0xb9, 0x0b, 0x95, 0x20, 0x94,
	0x76, 0x10, 0xfb, 0xbe, 0xe9, 0xa0, 0x2e, 0x05, 0xa1, 0x44, 0x38, 0xd9, 0x80, 0x4a, 0x14, 0x0a,
	0x96, 0xd6, 0xf5, 0x0b, 0x56, 0x3a, 0xde, 0xf8, 0xe5, 0x1c, 0x40, 0xb6, 0x5f, 0xf0, 0x3a, 0x3a,
	0x0a, 0x39, 0x65, 0xe3, 0xc0, 0x9e, 0x91, 0x5e, 0x88, 0xe1, 0xe5, 0x9d, 0x32, 0xeb, 0x73, 0x09,
	0xcc, 0xe7, 0xbe, 0x54, 0xfd, 0xc6, 0xca, 0x24, 0xdb, 0x8b, 0x98, 0x6e, 0x92, 0x1b, 0x4b, 0x46,
	0xdd, 0xa5, 0x23, 0xd3, 0x57, 0x54, 0x59, 0x64, 0x41, 0xf5, 0x3b, 0xd3, 0xa4, 0xf0, 0x00, 0x5a,
	0x89, 0x69, 0x09, 0x62, 0x51, 0x21, 0x9a, 0x86, 0xbc, 0x63, 0x80, 0xdb, 0xb0, 0x92, 0x00, 0xe3,
	0xc8, 0x73, 0xa4, 0xd9, 0xe9, 0x4b, 0xda, 0xef, 0x86, 0x75, 0xa2, 0x38, 0x6a, 0xfd, 0x73, 0x78,
	0x8f, 0xfa, 0x34, 0xc1, 0x57, 0x0a, 0xf8, 0x5d, 0xc5, 0x51, 0xf8, 0x87, 0x90, 0xac, 0x83, 0x3d,
	0x71, 0xa4, 0x7b, 0xaa, 0xe1, 0xfa, 0x4e, 0xd8, 0x36, 0x9c, 0x17, 0xc8, 0x40, 0x74, 0xf7, 0x0f,
	0x16, 0x61, 0xf9, 0xca, 0xbb, 0xd4, 0x6d, 0xd2, 0x37, 0x5e, 0x39, 0xd9, 0x5b, 0x6a, 0xfa, 0xff,
	0xba, 0x2e, 0xaa, 0x22, 0x45, 0xb7, 0xfe, 0xef, 0x42, 0x45, 0xd0, 0xd7, 0xb6, 0x70, 0x9d, 0xc0,
	0xdc, 0xc1, 0x97, 0x04, 0x7d, 0x7d, 0xec, 0x3a, 0x01, 0xde, 0x9e, 0x90, 0x25, 0xe3, 0x48, 0x9f,
	0xd2, 0xba, 0x3e, 0x02, 0x41, 0x5f, 0x0f, 0xe2, 0x48, 0x9d, 0xd1, 0x77, 0xa1, 0xc2, 0xbc, 0x0b,
	0x2d, 0xac, 0xcb, 0xa3, 0x25, 0xe6, 0x5d, 0x28, 0xe1, 0x2e, 0x34, 0x90, 0x85, 0xc2, 0x23, 0x2a,
	0xdd, 0x53, 0x53, 0x15, 0xd5, 0x98, 0x77, 0x31, 0x88, 0xa3, 0xa7, 0x48, 0x22, 0x1b, 0x50, 0x0d,
	0x14, 0x82, 0x99, 0x16, 0x6d, 0xd9, 0x5a, 0x0a, 0x06, 0x71, 0xb4, 0x17, 0x88, 0x8c, 0x17, 0x47,
	0x9e, 0x29, 0x7a, 0x14, 0xef, 0x24, 0xf2, 0x32, 0x9e, 0x47, 0x7d, 0x53, 0xe5, 0x28, 0xde, 0x2e,
	0xf5, 0xc9, 0x87, 0xd0, 0xd0, 0x3c, 0xf5, 0x8f, 0x3b, 0x51, 0x52, 0xde, 0x00, 0xf2, 0x9f, 0x85,
	0x12, 0xc5, 0xdf, 0x03, 0x08, 0x6c, 0x9f, 0x9d, 0x53, 0xc4, 0x99, 0x9a, 0xa6, 0x12, 0xec, 0xb3,
	0x73, 0x3a, 0x88, 0x23, 0xcd, 0xf5, 0x54, 0x25, 0x11, 0x47, 0xa6, 0x86, 0xa9, 0x04, 0xbb, 0x58,
	0x46, 0xc4, 0x11, 0xf9, 0x36, 0xac, 0x04, 0xf6, 0x24, 0xf4, 0x6c, 0xc1, 0x30, 0x23, 0x9b, 0x8d,
	0x65, 0x0a, 0x98, 0x76, 0xf0, 0x22, 0xf4, 0x8e, 0x91, 0xd1, 0xd3, 0x74, 0x2c, 0x3a, 0xd4, 0xdb,
	0x4e, 0x56, 0xea, 0x10, 0x5d, 0xea, 0x20, 0x35, 0x2d, 0x75, 0xba, 0xd0, 0xc8, 0x50, 0x58, 0xb9,
	0xad, 0xe8, 0xb5, 0x4a, 0x40, 0x58, 0xb8, 0x99, 0xf5, 0xcc, 0x14, 0xad, 0xa6, 0xeb, 0x99, 0xea,
	0xd9, 0x84, 0x7a, 0x8a, 0x41, 0x35, 0x6b, 0xfa, 0xd3, 0x0d, 0xc4, 0x94, 0x7f, 0xea, 0x58, 0xc8,
	0xe9, 0x59, 0xd7, 0xe5, 0x9f, 0x22, 0xa7, 0x9a, 0xb0, 0x44, 0xcb, 0x70, 0xa8, 0xcb, 0xf4, 0xae,
	0x52, 0x18, 0x6a, 0x43, 0x54, 0xd1, 0xa8, 0x8e, 0x41, 0xe5, 0xad, 0xea, 0x42, 0x43, 0x16, 0xcc,
	0xd2, 0x3d, 0xa9, 0x9a, 0xcc, 0xd9, 0xb5, 0x05, 0x6d, 0x3d, 0x5f, 0x2e, 0x54, 0x37, 0x74, 0x19,
	0xad, 0xe8, 0xc7, 0x49, 0xbc, 0x76, 0xff, 0x7a, 0x0e, 0x1a, 0x85, 0x97, 0xd4, 0xdb, 0xec, 0x81,
	0x1f, 0x9a, 0x44, 0x32, 0xa7, 0xae, 0xc9, 0x0f, 0x6f, 0x7e, 0x9e, 0xdd, 0x56, 0x7f, 0xd5, 0xe5,
	0x58, 0xa7, 0x9d, 0x5f, 0x87, 0x5a, 0xe8, 0xaa, 0x26, 0xab, 0x2a, 0xfd, 0xca, 0x37, 0x96, 0x7e,
	0x90, 0xc0, 0x75, 0xe5, 0xe7, 0x44, 0x11, 0x0f, 0x2f, 0xd8, 0x04, 0xd3, 0x48, 0x5e, 0x91, 0x7e,
	0xc3, 0x5a, 0xcb, 0xb1, 0x0f, 0x53, 0xb9, 0xee, 0x09, 0x54, 0x53, 0x3b, 0xf0, 0x1a, 0xfd, 0xa2,
	0x77, 0x70, 0xd2, 0xdb, 0xb7, 0xf5, 0x0d, 0xb4, 0xfd, 0x15, 0xbc, 0x19, 0xe2, 0x8d, 0x34, 0x21,
	0x94, 0xf0, 0x76, 0x69, 0x30, 0xbd, 0x83, 0xde, 0xfe, 0xe7, 0x3f, 0xc1, 0x5b, 0x75, 0x1b, 0xea,
	0x0a, 0x94, 0x50, 0xca, 0xdd, 0xff, 0x9c, 0x83, 0xf6, 0xf4, 0xdb, 0x31, 0x1e, 0x2d, 0xe6, 0xfd,
	0x39, 0xbb, 0x56, 0xe9, 0xe7, 0x64, 0xdd, 0xe0, 0x28, 0x2c, 0xf1, 0xdc, 0xd5, 0x25, 0xce, 0x25,
	0xdc, 0x72, 0x31, 0xe1, 0xa6, 0x9a, 0xb3, 0x64, 0xad, 0x35, 0x63, 0x9e, 0x7e, 0x7a, 0x25, 0x9d,
	0xdf, 0xf2, 0x29, 0x60, 0x2a, 0xdf, 0xbf, 0x0f, 0xc0, 0x84, 0x1d, 0x71, 0x36, 0xc1, 0xb3, 0xd9,
	0x3c, 0xed, 0x31, 0x71, 0xa4, 0x09, 0xca, 0x06, 0x61, 0xc7, 0x01, 0x7b, 0x1d, 0x53, 0xd3, 0xcd,
	0xa8, 0x30, 0x71, 0xa2, 0xc6, 0x2a, 0x8b, 0x09, 0xfd, 0x0a, 0x97, 0x14, 0x61, 0x4c, 0xa8, 0x57,
	0xb5, 0xa9, 0xfa, 0xad, 0x7a, 0xa5, 0x7e, 0xc3, 0x69, 0xd5, 0xb7, 0xa9, 0xf0, 0x32, 0x0f, 0xc4,
	0x8a, 0xa2, 0x92, 0xf6, 0x7f, 0x97, 0xa0, 0x59, 0x7c, 0x50, 0xbf, 0x7e, 0x9d, 0x6f, 0xce, 0xd5,
	0x69, 0xba, 0x2d, 0x17, 0xd3, 0xad, 0xd9, 0xfa, 0xd3, 0xb9, 0x5a, 0x67, 0xdb, 0x64, 0x1b, 0xde,
	0x98, 0x90, 0xaf, 0x24, 0x99, 0xa5, 0x9b, 0x93, 0x4c, 0x65, 0x3a, 0xc9, 0x74, 0xff, 0xb8, 0x0c,
	0x2b, 0x33, 0x1e, 0xfc, 0x31, 0x8a, 0xb2, 0x7f, 0x1d, 0xc8, 0x36, 0x6a, 0xfa, 0x6f, 0x00, 0xfa,
	0xa9, 0xd0, 0x77, 0x82, 0x71, 0xec, 0x8c, 0xd3, 0xfa, 0x26, 0x19, 0x93, 0xf5, 0xf4, 0xc1, 0x47,
	0x07, 0x51, 0xf2, 0x9e, 0x83, 0x8b, 0xa6, 0x5f, 0x63, 0x86, 0x2c, 0x69, 0x4c, 0x56, 0x35, 0xe5,
	0x09, 0x0b, 0x72, 0xad, 0x85, 0xc5, 0xc2, 0x9b, 0xe8, 0x3a, 0x2c, 0x72, 0x2a, 0x62, 0x5f, 0x9a,
	0x13, 0xda, 0x8c, 0xc8, 0x7b, 0x50, 0x75, 0xc6, 0x63, 0x4e, 0xc7, 0x49, 0x87, 0xb6, 0x62, 0x65,
	0x04, 0x94, 0x7a, 0xc3, 0x02, 0x2f, 0x7c, 0x63, 0x0a, 0x6b, 0x33, 0xc2, 0x3b, 0x81, 0xa0, 0x6e,
	0xcc, 0x99, 0xbc, 0xd4, 0x77, 0x20, 0xca, 0xcd, 0xf3, 0x5d, 0x2b, 0xa1, 0xef, 0x6a, 0x32, 0x4e,
	0xe0, 0x53, 0xe7, 0x2c, 0xe2, 0xa1, 0x7a, 0x8c, 0x55, 0x13, 0xa4, 0x04, 0xf5, 0x95, 0x92, 0x33,
	0x57, 0x9a, 0x02, 0xda, 0x8c, 0xc8, 0x07, 0x50, 0xe3, 0x54, 0xc6, 0x3c, 0x10, 0xb6, 0xa0, 0x52,
	0x5d, 0x84, 0x2b, 0x16, 0x18, 0xd2, 0x31, 0x95, 0xb8, 0x74, 0xe7, 0x21, 0xee, 0x47, 0x5f, 0x5f,
	0x7f, 0xab, 0x56, 0x3a, 0xee, 0xfe, 0x61, 0x09, 0x96, 0xaf, 0xfc, 0x93, 0xc4, 0x6d, 0xfc, 0xf1,
	0xbf, 0xea, 0xa7, 0xdc, 0x83, 0xaa, 0xa0, 0xfe, 0x48, 0x73, 0xe7, 0x15, 0xb7, 0x82, 0x04, 0x64,
	0x0e, 0x17, 0x55, 0xae, 0x7c, 0xfc, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x77, 0xc1, 0xb7, 0xfb,
	0x82, 0x2c, 0x00, 0x00,
}
