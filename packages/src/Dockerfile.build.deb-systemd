FROM debian:stretch

ARG TARGETARCH
ENV GOPATH /go
ENV GOVERSION 1.17
ENV CODE_DIR $GOPATH/src/github.com/pganalyze/collector
ENV PATH $PATH:/usr/local/go/bin
ENV ROOT_DIR /root
ENV SOURCE_DIR /source

# Packages required for both building and packaging
RUN apt-get update -qq \
  && apt-get install -y -q build-essential curl git ruby ruby-dev

# FPM
RUN gem install fpm -v 1.14.1

# Golang
RUN curl -o go.tar.gz -sSL "https://golang.org/dl/go${GOVERSION}.linux-${TARGETARCH}.tar.gz"
RUN tar -C /usr/local -xzf go.tar.gz

# Build arguments
ARG VERSION
ARG GIT_VERSION
ENV NAME pganalyze-collector

# Build the collector
COPY . $CODE_DIR
WORKDIR $CODE_DIR
RUN git checkout ${GIT_VERSION}
RUN make build_dist

# Update contrib and packages directory beyond the tagged release
COPY ./contrib $CODE_DIR/contrib
COPY ./packages $CODE_DIR/packages

# Prepare the package source
RUN mkdir -p $SOURCE_DIR/usr/bin/
RUN cp $CODE_DIR/pganalyze-collector $SOURCE_DIR/usr/bin/
RUN cp $CODE_DIR/pganalyze-collector-helper $SOURCE_DIR/usr/bin/
RUN cp $CODE_DIR/pganalyze-collector-setup $SOURCE_DIR/usr/bin/
RUN chmod +x $SOURCE_DIR/usr/bin/pganalyze-collector
RUN chmod +x $SOURCE_DIR/usr/bin/pganalyze-collector-helper
RUN chmod +x $SOURCE_DIR/usr/bin/pganalyze-collector-setup
RUN mkdir -p $SOURCE_DIR/etc/
RUN cp $CODE_DIR/contrib/pganalyze-collector.conf $SOURCE_DIR/etc/pganalyze-collector.conf
RUN mkdir -p $SOURCE_DIR/usr/share/pganalyze-collector/sslrootcert
RUN cp $CODE_DIR/contrib/sslrootcert/* $SOURCE_DIR/usr/share/pganalyze-collector/sslrootcert

# Build the package
WORKDIR $ROOT_DIR
RUN fpm \
  -n $NAME -v ${VERSION} -t deb \
  --deb-systemd $CODE_DIR/contrib/systemd/pganalyze-collector.service \
  --after-upgrade $CODE_DIR/packages/src/deb-systemd/after-install.sh \
  --after-install $CODE_DIR/packages/src/deb-systemd/after-install.sh \
  --deb-maintainerscripts-force-errorchecks \
  --deb-systemd-enable \
  --deb-systemd-auto-start \
  --deb-systemd-restart-after-upgrade \
  -m "<team@pganalyze.com>" --url "https://pganalyze.com/" \
  --description "pganalyze statistics collector" \
	--vendor "pganalyze" --license="BSD" \
  -s dir -C $SOURCE_DIR etc usr

VOLUME ["/out"]
